{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tanks, tank => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: tank.id,\n      class: \"tank\",\n      style: _normalizeStyle({\n        top: tank.y + 'px',\n        left: tank.x + 'px'\n      })\n    }, \" üõ°Ô∏è \", 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.pixelMap, (row, rowIndex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: rowIndex,\n      class: \"row\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (pixel, pixelIndex) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: pixelIndex,\n        class: \"pixel\",\n        style: _normalizeStyle({\n          backgroundColor: pixel.color\n        })\n      }, null, 4 /* STYLE */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_renderList","$data","tanks","tank","key","id","style","_normalizeStyle","top","y","left","x","_ctx","pixelMap","row","rowIndex","pixel","pixelIndex","backgroundColor","color"],"sources":["/home/antiphy/ITU/ITU_project/src/views/GameScreen.vue"],"sourcesContent":["<template>\n    <div class=\"map\">\n      <div v-for=\"tank in tanks\" :key=\"tank.id\" class=\"tank\" :style=\"{ top: tank.y + 'px', left: tank.x + 'px' }\">\n        üõ°Ô∏è\n      </div>\n    </div>\n\n    <div>\n    <div v-for=\"(row, rowIndex) in pixelMap\" :key=\"rowIndex\" class=\"row\">\n      <div \n        v-for=\"(pixel, pixelIndex) in row\" \n        :key=\"pixelIndex\" \n        class=\"pixel\" \n        :style=\"{ backgroundColor: pixel.color }\">\n      </div>\n    </div>\n  </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'GameScreen',\n    data() {\n      return {\n        tanks: [\n          { id: 1, x: 50, y: 50 },\n          { id: 2, x: 150, y: 100 },\n          { id: 3, x: 200, y: 200 }\n        ]\n      };\n    },\n    methods: {\n      // Add methods to handle tank movements or other interactions\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .map {\n    position: relative;\n    width: 100%;\n    height: 100vh;\n    background-color: #e0e0e0; /* Light grey background for the map */\n  }\n  \n  .tank {\n    position: absolute;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n  }\n\n  .curved-rectangle {\n  position: absolute;\n  top: 300px; /* Adjust as needed */\n  left: 50px; /* Adjust as needed */\n}\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAK;;uBADpBC,mBAAA,CAAAC,SAAA,SACIC,mBAAA,CAIM,OAJNC,UAIM,I,kBAHJH,mBAAA,CAEMC,SAAA,QAJZG,WAAA,CAE0BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBP,mBAAA,CAEM;MAFsBQ,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEV,KAAK,EAAC,MAAM;MAAEW,KAAK,EAFnEC,eAAA;QAAAC,GAAA,EAE4EL,IAAI,CAACM,CAAC;QAAAC,IAAA,EAAeP,IAAI,CAACQ,CAAC;MAAA;OAAW,OAE5G;oCAGFb,mBAAA,CASI,e,kBARJF,mBAAA,CAOMC,SAAA,QAfVG,WAAA,CAQmCY,IAAA,CAAAC,QAAQ,EAR3C,CAQiBC,GAAG,EAAEC,QAAQ;yBAA1BnB,mBAAA,CAOM;MAPoCQ,GAAG,EAAEW,QAAQ;MAAEpB,KAAK,EAAC;2BAC7DC,mBAAA,CAKMC,SAAA,QAdZG,WAAA,CAUsCc,GAAG,EAVzC,CAUgBE,KAAK,EAAEC,UAAU;2BAD3BrB,mBAAA,CAKM;QAHHQ,GAAG,EAAEa,UAAU;QAChBtB,KAAK,EAAC,OAAO;QACZW,KAAK,EAbdC,eAAA;UAAAW,eAAA,EAamCF,KAAK,CAACG;QAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}