{"ast":null,"code":"export default {\n  name: 'GameScreen',\n  data() {\n    return {\n      canvasWidth: 1920,\n      // Width of the canvas\n      canvasHeight: 800,\n      // Height of the canvas\n      map: [] // 2D Array for the terrain\n    };\n  },\n  mounted() {\n    this.initializeMap();\n    this.drawMap();\n  },\n  methods: {\n    // Initialize the map with ground and sky\n    initializeMap() {\n      const groundLevel = 600; // Set ground level in pixels\n\n      // Create a 2D array (matrix) representing the map\n      this.map = Array(this.canvasHeight).fill().map((_, y) => Array(this.canvasWidth).fill().map(() => y >= groundLevel ? 1 : 0));\n    },\n    // Draw the map using canvas\n    drawMap() {\n      const canvas = document.getElementById('gameCanvas');\n      const ctx = canvas.getContext('2d');\n\n      // Loop through the map array and draw each pixel\n      for (let y = 0; y < this.map.length; y++) {\n        for (let x = 0; x < this.map[y].length; x++) {\n          ctx.fillStyle = this.map[y][x] === 1 ? 'green' : 'skyblue'; // Set color based on terrain\n          ctx.fillRect(x, y, 1, 1); // Draw each pixel/block\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","canvasWidth","canvasHeight","map","mounted","initializeMap","drawMap","methods","groundLevel","Array","fill","_","y","canvas","document","getElementById","ctx","getContext","length","x","fillStyle","fillRect"],"sources":["/home/antiphy/ITU/ITU_project/src/views/GameScreen.vue"],"sourcesContent":["<template>\n\n    <div class=\"flex justify-end items-center min-h-screen bg-grey-300\">\n        <canvas id=\"gameCanvas\" :width=\"canvasWidth\" :height=\"canvasHeight\"></canvas>\n    </div>\n\n\n  </template>\n  \n  <script>\n  export default {\n    name: 'GameScreen',\n    data() {\n      return {\n        canvasWidth: 1920,  // Width of the canvas\n        canvasHeight: 800, // Height of the canvas\n        map: [], // 2D Array for the terrain\n      };\n    },\n    mounted() {\n        this.initializeMap();\n        this.drawMap();\n    },\n    methods: {\n        // Initialize the map with ground and sky\n        initializeMap() {\n            const groundLevel = 600; // Set ground level in pixels\n            \n            // Create a 2D array (matrix) representing the map\n            this.map = Array(this.canvasHeight).fill().map((_, y) => \n                Array(this.canvasWidth).fill().map(() => (y >= groundLevel ? 1 : 0))\n            );\n        },\n\n\n    // Draw the map using canvas\n        drawMap() {\n            const canvas = document.getElementById('gameCanvas');\n            const ctx = canvas.getContext('2d');\n            \n            // Loop through the map array and draw each pixel\n            for (let y = 0; y < this.map.length; y++) {\n                for (let x = 0; x < this.map[y].length; x++) {\n                    ctx.fillStyle = this.map[y][x] === 1 ? 'green': 'skyblue'; // Set color based on terrain\n                    ctx.fillRect(x, y, 1, 1); // Draw each pixel/block\n                }\n            }\n        },\n    }\n  };\n  </script>\n  \n  <style scoped>\n\n    .justify-end {\n    justify-content: flex-end; /* Aligns canvas to the bottom */\n    }\n    .min-h-screen {\n    min-height: 100vh; /* Full height of the viewport */\n    }\n\n    .row {\n    display: flex;\n    }\n\n    .pixel {\n    width: 10px;\n    height: 10px;\n    }\n</style>"],"mappings":"AAUE,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,IAAI;MAAG;MACpBC,YAAY,EAAE,GAAG;MAAE;MACnBC,GAAG,EAAE,EAAE,CAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,OAAO,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACL;IACAF,aAAaA,CAAA,EAAG;MACZ,MAAMG,WAAU,GAAI,GAAG,EAAE;;MAEzB;MACA,IAAI,CAACL,GAAE,GAAIM,KAAK,CAAC,IAAI,CAACP,YAAY,CAAC,CAACQ,IAAI,CAAC,CAAC,CAACP,GAAG,CAAC,CAACQ,CAAC,EAAEC,CAAC,KAChDH,KAAK,CAAC,IAAI,CAACR,WAAW,CAAC,CAACS,IAAI,CAAC,CAAC,CAACP,GAAG,CAAC,MAAOS,CAAA,IAAKJ,WAAU,GAAI,IAAI,CAAE,CACvE,CAAC;IACL,CAAC;IAGL;IACIF,OAAOA,CAAA,EAAG;MACN,MAAMO,MAAK,GAAIC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MACpD,MAAMC,GAAE,GAAIH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;;MAEnC;MACA,KAAK,IAAIL,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACT,GAAG,CAACe,MAAM,EAAEN,CAAC,EAAE,EAAE;QACtC,KAAK,IAAIO,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAAChB,GAAG,CAACS,CAAC,CAAC,CAACM,MAAM,EAAEC,CAAC,EAAE,EAAE;UACzCH,GAAG,CAACI,SAAQ,GAAI,IAAI,CAACjB,GAAG,CAACS,CAAC,CAAC,CAACO,CAAC,MAAM,IAAI,OAAO,GAAE,SAAS,EAAE;UAC3DH,GAAG,CAACK,QAAQ,CAACF,CAAC,EAAEP,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;QAC9B;MACJ;IACJ;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}