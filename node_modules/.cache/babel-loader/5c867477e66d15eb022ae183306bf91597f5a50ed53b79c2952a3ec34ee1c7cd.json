{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"game-screen text-center mt-10\"\n};\nconst _hoisted_2 = {\n  class: \"h-48 bg-black bg-opacity-80 bg-neutral-900 text-white m-auto items-center justify-center flex flex-rows space-x-6\",\n  style: {\n    \"width\": \"1280px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"flex flex-col space-y-1\"\n};\nconst _hoisted_4 = {\n  class: \"flex flex-row justify-center space-x-4\"\n};\nconst _hoisted_5 = {\n  class: \"text-black font-bold text-3xl\"\n};\nconst _hoisted_6 = {\n  class: \"relative\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"absolute top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50 flex justify-center items-center text-white text-2xl\"\n};\nconst _hoisted_8 = {\n  class: \"flex flex-rows space-x-8\"\n};\nconst _hoisted_9 = {\n  class: \"flex flex-col space-y-4\"\n};\nconst _hoisted_10 = {\n  class: \"font-bold text-white text-2xl\"\n};\nconst _hoisted_11 = {\n  class: \"flex flex-col space-y-2\"\n};\nconst _hoisted_12 = {\n  class: \"font-bold text-white text-2xl\"\n};\nconst _hoisted_13 = {\n  class: \"flex flex-col space-y-2, items-center\"\n};\nconst _hoisted_14 = {\n  class: \"font-bold text-white text-2xl\"\n};\nconst _hoisted_15 = {\n  class: \"flex flex-col space-y-3\"\n};\nconst _hoisted_16 = {\n  class: \"font-bold text-white text-2xl\"\n};\nconst _hoisted_17 = [\"width\", \"height\"];\nconst _hoisted_18 = {\n  key: 0,\n  class: \"absolute inset-0 flex flex-col space-y-2 items-center justify-center bg-black bg-opacity-50\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" <h1 class=\\\"text-2xl font-bold mb-4\\\">Tanks</h1> \"), _createCommentVNode(\" <label class=\\\"block\\\"><span class=\\\"font-bold\\\">Wind: <span class=\\\"text-2xl\\\">{{ wind }}</span> </span>  (positive for right, negative for left)</label> \"), _createCommentVNode(\" <div class=\\\"controls mt-4 flex justify-center items-center gap-4\\\">\\n        <div>\\n          <label class=\\\"block font-bold\\\">Angle: {{ angle }}Â°</label>\\n          <input \\n            type=\\\"range\\\" \\n            min=\\\"0\\\" \\n            max=\\\"90\\\" \\n            v-model=\\\"angle\\\" \\n            class=\\\"w-32\\\"\\n          />\\n        </div>\\n        <div>\\n          <label class=\\\"block font-bold\\\">Power: {{ power }}</label>\\n          <input \\n            type=\\\"range\\\" \\n            min=\\\"10\\\" \\n            max=\\\"100\\\" \\n            v-model=\\\"power\\\" \\n            class=\\\"w-32\\\"\\n          />\\n        </div>\\n      </div> \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" style=\\\"background: url('assets/metalbg.png') no-repeat center center; background-size: cover; width: 1280px;\\\"> \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    mouseover: \"showFireHelp\",\n    onMouseleave: _cache[0] || (_cache[0] = (...args) => $options.hideFireHelp && $options.hideFireHelp(...args)),\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fireMissile && $options.fireMissile(...args)),\n    class: \"ml-4 w-96 h-16 bg-blue-300 bg-opacity-50 text-black rounded-lg border-4 border-black hover:bg-blue-400 font-bold text-4xl\"\n  }, \" WEAPON SELECTOR \", 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    mouseover: \"showFireHelp\",\n    onMouseleave: _cache[2] || (_cache[2] = (...args) => $options.hideFireHelp && $options.hideFireHelp(...args)),\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.fireMissile && $options.fireMissile(...args)),\n    class: \"ml-4 w-96 h-16 bg-gray-300 bg-opacity-50 rounded-lg border-4 border-black hover:bg-gray-400\"\n  }, [_createElementVNode(\"div\", _hoisted_4, [_cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    class: \"text-black font-bold text-3xl\"\n  }, \"SMALL MISSILE\", -1 /* HOISTED */)), _cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n    class: \"w-8 h-8\",\n    style: {\n      \"background\": \"url('assets/small_missile_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.player1.ammunition[0].count), 1 /* TEXT */)])], 32 /* NEED_HYDRATION */)])]), _createCommentVNode(\" <img src=\\\"assets/small_missile_icon.png\\\" alt=\\\"Missile Icon\\\"> \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onMouseover: _cache[4] || (_cache[4] = (...args) => $options.showFireHelp && $options.showFireHelp(...args)),\n    onMouseleave: _cache[5] || (_cache[5] = (...args) => $options.hideFireHelp && $options.hideFireHelp(...args)),\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.fireMissile && $options.fireMissile(...args)),\n    class: \"w-80 py-16 bg-red-300 bg-opacity-50 text-black rounded-lg border-4 border-black hover:bg-red-400 font-bold text-4xl\"\n  }, [_cache[15] || (_cache[15] = _createTextVNode(\" FIRE \")), $data.fireHelpVisible ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \" Click to fire! \")) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]), _createCommentVNode(\" Row flex for money, time and so on \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"h1\", null, _toDisplayString($data.player1.time) + \" (s)\", 1 /* TEXT */)]), _cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n    class: \"w-16 h-16\",\n    style: {\n      \"background\": \"url('assets/time_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  }, null, -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"h1\", null, _toDisplayString($data.player1.money) + \"$\", 1 /* TEXT */)]), _cache[17] || (_cache[17] = _createElementVNode(\"div\", {\n    class: \"w-20 h-20\",\n    style: {\n      \"background\": \"url('assets/money_bag_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  }, null, -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"h1\", null, _toDisplayString($data.player1.fuel) + \"/\" + _toDisplayString($data.player1.fuelMax), 1 /* TEXT */)]), _cache[18] || (_cache[18] = _createElementVNode(\"div\", {\n    class: \"w-20 h-20\",\n    style: {\n      \"background\": \"url('assets/fuel_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  }, null, -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.wins) + \"win\", 1 /* TEXT */)]), _cache[19] || (_cache[19] = _createElementVNode(\"div\", {\n    class: \"w-16 h-16\",\n    style: {\n      \"background\": \"url('assets/trophy_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  }, null, -1 /* HOISTED */))])]), _createCommentVNode(\" Pause button, absolute position from the bar\"), _cache[20] || (_cache[20] = _createElementVNode(\"div\", {\n    class: \"relative mb-16\"\n  }, [_createElementVNode(\"div\", {\n    class: \"w-20 h-20\",\n    style: {\n      \"background\": \"url('assets/pause_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  })], -1 /* HOISTED */))])]), _createElementVNode(\"div\", null, [_createElementVNode(\"canvas\", {\n    ref: \"gameCanvas\",\n    width: $data.canvasWidth,\n    height: $data.canvasHeight,\n    class: \"border border-gray-700 m-auto\",\n    onMousemove: _cache[7] || (_cache[7] = (...args) => $options.onMouseMove && $options.onMouseMove(...args)),\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.onMouseClick && $options.onMouseClick(...args)),\n    onMouseleave: _cache[9] || (_cache[9] = (...args) => _ctx.onMouseLeave && _ctx.onMouseLeave(...args)),\n    onMouseup: _cache[10] || (_cache[10] = (...args) => $options.onMouseUp && $options.onMouseUp(...args)),\n    onMousedown: _cache[11] || (_cache[11] = (...args) => $options.onMouseDown && $options.onMouseDown(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_17)]), $data.gameOver ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_cache[21] || (_cache[21] = _createElementVNode(\"h1\", {\n    class: \"text-4xl font-bold\"\n  }, \"Game Over!\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.backToMenu && $options.backToMenu(...args)),\n    class: \"border-4 border-sky-700 text-center bg-sky-300 hover:bg-sky-400 font-bold text-xl py-4 px-32 rounded-2xl mt-4 justify-center items-center\"\n  }, \" Back to Menu \")])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","key","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","mouseover","onMouseleave","_cache","args","$options","hideFireHelp","onClick","fireMissile","_hoisted_4","_hoisted_5","_toDisplayString","$data","player1","ammunition","count","_hoisted_6","onMouseover","showFireHelp","_createTextVNode","fireHelpVisible","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","time","_hoisted_11","_hoisted_12","money","_hoisted_13","_hoisted_14","fuel","fuelMax","_hoisted_15","_hoisted_16","_ctx","wins","ref","width","canvasWidth","height","canvasHeight","onMousemove","onMouseMove","onMouseClick","onMouseLeave","onMouseup","onMouseUp","onMousedown","onMouseDown","_hoisted_17","gameOver","_hoisted_18","backToMenu"],"sources":["/home/antiphy/ITU/ITU_project/src/views/GameScreen.vue"],"sourcesContent":["<template>\n    <div class=\"game-screen text-center mt-10\">\n      <!-- <h1 class=\"text-2xl font-bold mb-4\">Tanks</h1> -->\n      <!-- <label class=\"block\"><span class=\"font-bold\">Wind: <span class=\"text-2xl\">{{ wind }}</span> </span>  (positive for right, negative for left)</label> -->\n      <!-- <div class=\"controls mt-4 flex justify-center items-center gap-4\">\n        <div>\n          <label class=\"block font-bold\">Angle: {{ angle }}Â°</label>\n          <input \n            type=\"range\" \n            min=\"0\" \n            max=\"90\" \n            v-model=\"angle\" \n            class=\"w-32\"\n          />\n        </div>\n        <div>\n          <label class=\"block font-bold\">Power: {{ power }}</label>\n          <input \n            type=\"range\" \n            min=\"10\" \n            max=\"100\" \n            v-model=\"power\" \n            class=\"w-32\"\n          />\n        </div>\n      </div> -->\n      <div\n        class=\"h-48 bg-black bg-opacity-80 bg-neutral-900 text-white m-auto items-center justify-center flex flex-rows space-x-6\"\n        style=\"width: 1280px;\">\n        <!-- style=\"background: url('assets/metalbg.png') no-repeat center center; background-size: cover; width: 1280px;\"> -->\n\n        <div class=\"flex flex-col space-y-1\">\n          <div>\n            <button\n              mouseover=\"showFireHelp\"\n              @mouseleave=\"hideFireHelp\"\n              @click=\"fireMissile\"\n              class=\"ml-4 w-96 h-16 bg-blue-300 bg-opacity-50 text-black rounded-lg border-4 border-black hover:bg-blue-400 font-bold text-4xl\">\n              WEAPON SELECTOR\n            </button>\n          </div>\n\n          <div>\n            <button\n              mouseover=\"showFireHelp\"\n              @mouseleave=\"hideFireHelp\"\n              @click=\"fireMissile\"\n              class=\"ml-4 w-96 h-16 bg-gray-300 bg-opacity-50 rounded-lg border-4 border-black hover:bg-gray-400\">\n              <div class=\"flex flex-row justify-center space-x-4\">\n                <div class=\"text-black font-bold text-3xl\">SMALL MISSILE</div>\n                <div class=\"w-8 h-8\" style=\"background: url('assets/small_missile_icon.png') no-repeat center center; background-size: cover;\"></div>\n                <div class=\"text-black font-bold text-3xl\">{{ player1.ammunition[0].count }}</div>\n              </div>\n               \n            </button>\n          </div>\n      </div>\n        <!-- <img src=\"assets/small_missile_icon.png\" alt=\"Missile Icon\"> -->\n\n        <div class=\"relative\">\n          <button\n              @mouseover=\"showFireHelp\"\n              @mouseleave=\"hideFireHelp\"\n              @click=\"fireMissile\"\n              class=\"w-80 py-16 bg-red-300 bg-opacity-50 text-black rounded-lg border-4 border-black hover:bg-red-400 font-bold text-4xl\">\n              FIRE\n            <span v-if=\"fireHelpVisible\" class=\"absolute top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50 flex justify-center items-center text-white text-2xl\">\n              Click to fire!\n            </span>\n          </button>\n        </div>\n\n        <!-- Row flex for money, time and so on -->\n        <div class =\"flex flex-rows space-x-8\">\n\n          <div class =\"flex flex-col space-y-4\">\n            <div class=\"font-bold text-white text-2xl\">\n              <h1>{{ player1.time }} (s)</h1>\n            </div>\n            <div class = \"w-16 h-16\" style=\"background: url('assets/time_icon.png') no-repeat center center; background-size: cover;\"></div>\n          </div>\n\n          <div class =\"flex flex-col space-y-2\">\n            <div class=\"font-bold text-white text-2xl\">\n              <h1>{{ player1.money }}$</h1>\n            </div>\n            <div class = \"w-20 h-20\" style=\"background: url('assets/money_bag_icon.png') no-repeat center center; background-size: cover;\"></div>\n          </div>\n\n          <div class =\"flex flex-col space-y-2, items-center\">\n            <div class=\"font-bold text-white text-2xl\">\n              <h1>{{ player1.fuel }}/{{ player1.fuelMax }}</h1>\n            </div>\n            <div class = \"w-20 h-20\" style=\"background: url('assets/fuel_icon.png') no-repeat center center; background-size: cover;\"></div>\n          </div>\n\n          <div class =\"flex flex-col space-y-3\">\n            <div class=\"font-bold text-white text-2xl\">\n              <h1>{{ wins }}win</h1>\n            </div>\n            <div class = \"w-16 h-16\" style=\"background: url('assets/trophy_icon.png') no-repeat center center; background-size: cover;\"></div>\n          </div>\n\n        </div>\n\n        <!-- Pause button, absolute position from the bar-->\n        <div class=\"relative mb-16\">\n          <div class=\"w-20 h-20\" style=\"background: url('assets/pause_icon.png') no-repeat center center; background-size: cover;\"></div>\n        </div>\n\n        \n        \n      </div>\n\n    </div>\n    <div>\n      <canvas \n        ref=\"gameCanvas\" \n        :width=\"canvasWidth\" \n        :height=\"canvasHeight\" \n        class=\"border border-gray-700 m-auto\"\n        @mousemove=\"onMouseMove\"\n        @click=\"onMouseClick\"\n        @mouseleave=\"onMouseLeave\"\n        @mouseup=\"onMouseUp\"\n        @mousedown=\"onMouseDown\"\n      ></canvas>\n    </div>\n    <div v-if=\"gameOver\" class=\"absolute inset-0 flex flex-col space-y-2 items-center justify-center bg-black bg-opacity-50\">\n        <h1 class=\"text-4xl font-bold\">Game Over!</h1>\n        <button @click=\"backToMenu\" class=\"border-4 border-sky-700 text-center bg-sky-300 hover:bg-sky-400 font-bold text-xl py-4 px-32 rounded-2xl mt-4 justify-center items-center\">\n          Back to Menu\n        </button>\n\n    </div>\n  </template>\n  \n  <script>\n  //import axios from 'axios';\n  export default {\n    name: \"GameScreen\",\n    data() {\n      return {\n        canvasWidth: 1280,\n        canvasHeight: 720,\n        terrain: [],\n        player1: {\n          x: 100,\n          y: 370,\n          size: 40,\n          angle: 45,\n          power: 50,\n          tankColor: \"green\",\n          name: \"DJ Khaled\",\n          health: 100,\n          ammunition: [\n            {\n              name: \"smallMissile\",\n              count: 20,\n              damage: 20,\n              radius: 30,\n              cost: 200,\n            },\n          ],\n          wins: 1,\n          money: 4000,\n          fuel: 100,\n          fuelMax: 250,\n          time: 40,\n\n        },\n        mousePosition: {\n          x: 0,\n          y: 0,\n        },\n        isHovering: false,\n        aimCircleRadius: 200,\n        maxShotPower: 100,\n        minShotPower: 1,\n        stopLine: false,\n        lineStopX: 200,\n        lineStopY: 400,\n        isDragging: false,\n\n        wind: 0,\n        missile: null,\n        angle: 45,\n        power: 50,\n        gameOver: false,\n        fireHelpVisible: false,\n      };\n    },\n    mounted() {\n      //this.wind = 0;//Math.floor(Math.random() * 100 - 50); \n      //this.player1.tankColor = \"green\"; //this.$route.query.color;\n      this.startTimer();\n      this.generateTerrain();\n      this.renderGame();\n      window.addEventListener('keydown', this.onKeyPressed);\n    },\n    methods: {\n      showFireHelp() {\n        this.fireHelpVisible = true;\n      },\n      hideFireHelp() {\n        this.fireHelpVisible = false;\n      },\n\n      backToMenu() {\n        this.$router.push('/');\n      },\n\n      drawPlayerNames(ctx) {\n        ctx.save();\n\n        //size of rectangles for healthbars\n        const player1X = 10 + 200 / 2;\n        const player2X = 1070 + 200 / 2;\n\n        ctx.font = \"28px Montserrat\";\n        ctx.fillStyle = \"black\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.player1.name, player1X, 30);\n        ctx.fillText(\"Player 2\", player2X, 30);\n        ctx.restore();\n      },\n\n      drawPlayerHealth(ctx){\n        ctx.save();\n\n        ctx.fillStyle = 'black'; // White color\n        ctx.fillRect(10, 50, 200, 40);\n\n        ctx.fillRect(1070, 50, 200, 40);\n\n        // Draw red fill\n        ctx.fillStyle = '#FF0000'; // Red color\n        ctx.fillRect(10, 50, 180, 40); // Adjusted for border thickness\n        ctx.fillRect(1070, 50, 180, 40); // Adjusted for border thickness\n\n        //Draw outline\n        ctx.strokeStyle = 'gray';\n        ctx.lineWidth = 5; // Border width\n        ctx.strokeRect(10, 50, 200, 40);\n        ctx.strokeRect(1070, 50, 200, 40);\n\n        ctx.fillStyle = '#000000'; // Text color\n        ctx.font = '20px Montserrat';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('80/100', 110, 70);\n        ctx.fillText('80/100', 1170, 70);\n\n        ctx.restore();\n      },\n\n      drawWind(ctx){\n        ctx.save();\n        \n        ctx.fillStyle = 'black'; // Text color\n        ctx.font = 'bold 20px Montserrat';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('Wind: ', 600, 20);\n        ctx.fillText(this.wind, 639, 20);\n        \n        ctx.restore();\n      },\n\n      drawAnglePower(ctx) {\n        ctx.save();\n        ctx.fillStyle = \"black\";\n        ctx.font = \"bold 20px Montserrat\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        // ctx.fillText(`Angle: ${this.angle}Â°`, this.player1.x, this.player1.y - 50);\n        // ctx.fillText(`Power: ${this.power}`, this.player1.x + 10, this.player1.y - 50);\n        ctx.fillText(`${Math.round(this.angle)}Â°,`, this.player1.x - 10, this.player1.y - 180);\n        ctx.fillText(this.power, this.player1.x + 26, this.player1.y - 180);\n        ctx.restore();\n      },\n\n      startTimer() {\n        setInterval(() => {\n          if (this.time > 0) {\n            this.time--;\n          } else {\n            this.gameOver = true;\n          }\n        }, 1000);\n      },\n\n      generateTerrain() {\n        // Generate a simple random terrain within 2/3 of the canvas height\n        const maxTerrainHeight = (this.canvasHeight * 2) / 3;\n        this.terrain = new Array(this.canvasWidth).fill(0).map((_, x) => {\n          const baseHeight = maxTerrainHeight; // Base height is 2/3 of the canvas height\n          const variation = Math.sin(x * 0.06) * 15 + Math.sin(x * 0.1) * 10 + Math.sin(x * 0.01) * 50;\n          return baseHeight + variation;\n        });\n      },\n\n      fireMissile() {\n        const ammunition = this.player1.ammunition[0].count;\n        if(ammunition <= 0){\n          return;\n        }\n        this.player1.ammunition[0].count--;\n        const startX = this.player1.x;\n        const startY = this.player1.y - 15; //this.terrain[Math.floor(player.x)] - player.size / 2\n        const controlX = startX + Math.cos(this.angle * (Math.PI / 180)) * this.power * 10 + this.wind * 4;\n        const controlY = startY - Math.sin(this.angle * (Math.PI / 180)) * this.power * 10;\n        const endX = controlX + Math.cos(this.angle * (Math.PI / 180)) * this.power * 10 + this.wind * 8;\n        const endY = this.canvasHeight;\n  \n        this.missile = {\n          t: 0,\n          startX,\n          startY,\n          controlX,\n          controlY,\n          endX,\n          endY,\n        };\n  \n        this.animateMissile();\n      },\n      animateMissile() {\n        if (!this.missile) return;\n  \n        const { t, startX, startY, controlX, controlY, endX, endY } = this.missile;\n  \n        const x = (1 - t) * (1 - t) * startX + 2 * (1 - t) * t * controlX + t * t * endX;\n        const y = (1 - t) * (1 - t) * startY + 2 * (1 - t) * t * controlY + t * t * endY;\n  \n        this.missile.t += 0.01;\n        if (this.missile.t >= 1 || this.checkTerrainCollision(x, y)) {\n          this.explodeTerrain(x, y);\n          this.missile = null;\n          return;\n        }\n  \n        this.renderGame();\n  \n        const canvas = this.$refs.gameCanvas;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.arc(x, y, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = \"red\";\n        ctx.fill();\n  \n        requestAnimationFrame(this.animateMissile);\n      },\n      checkTerrainCollision(x, y) {\n        // Check if the missile hit the terrain\n        return y >= this.terrain[Math.floor(x)];\n      },\n      explodeTerrain(x, y) {\n        // Create a circular explosion in the terrain\n        const explosionRadius = this.player1.ammunition[0].radius;\n        for (let i = -explosionRadius; i <= explosionRadius; i++) {\n          const pos = Math.floor(x) + i;\n          if (pos >= 0 && pos < this.canvasWidth) {\n            const distance = Math.sqrt(i * i);\n            if (distance <= explosionRadius) {\n              const impactDepth = Math.sqrt(explosionRadius * explosionRadius - distance * distance);\n              this.terrain[pos] = Math.max(this.terrain[pos], y + impactDepth);\n            }\n          }\n        }\n        this.renderGame();\n        this.wind = 0;// Math.floor(Math.random() * 100 - 50); \n\n      },\n      renderGame() {\n        const canvas = this.$refs.gameCanvas;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n\n        // Draw the terrain\n        // this.drawTerrain(ctx);\n  \n        // Draw player 1's tank\n        // this.drawTank(ctx, this.player1);\n\n        // //Draw wind\n        // this.drawWind(ctx);\n\n        // //Draw player names\n        // this.drawPlayerNames(ctx);\n\n        // //Draw player health\n        // this.drawPlayerHealth(ctx);\n\n        // Draw the aiming circle\n        this.drawAimCircle(this.player1);\n\n      },\n      drawTerrain(ctx) {\n        ctx.beginPath();\n        ctx.moveTo(0, this.canvasHeight);\n        for (let x = 0; x < this.terrain.length; x++) {\n          ctx.lineTo(x, this.terrain[x]);\n        }\n        ctx.lineTo(this.canvasWidth, this.canvasHeight);\n        ctx.closePath();\n        ctx.fillStyle = \"saddlebrown\";\n        ctx.fill();\n      },\n\n      onKeyPressed(event){\n        if(event.key === 'ArrowRight'){\n\n          if(this.fuel > 0 && this.player1.x <  this.canvasWidth - 5){\n            this.fuel -= 5;\n            this.player1.x += 5;\n            this.lineStopX += 5;\n          }\n        } else if(event.key === 'ArrowLeft'){\n          if(this.fuel > 0 && this.player1.x > 5){\n            this.fuel -= 5;\n            this.player1.x -= 5;\n            this.lineStopX -= 5;\n          }\n        }\n        this.renderGame();\n      },\n\n      onMouseDown(event) {\n        const rect = this.$refs.gameCanvas.getBoundingClientRect();\n        this.mousePosition.x = event.clientX - rect.left;\n        this.mousePosition.y = event.clientY - rect.top;\n\n        // Check if the click is within the aim circle\n        if (this.isHovering) {\n          this.isDragging = true; // Start dragging\n          this.lineStopX = this.mousePosition.x; // Initialize line stop positions\n          this.lineStopY = this.mousePosition.y;\n        }\n      },\n\n      onMouseUp() {\n        this.isDragging = false; // Stop dragging\n      },\n\n      onMouseMove(event) {\n          const rect = this.$refs.gameCanvas.getBoundingClientRect();\n          this.mousePosition.x = event.clientX - rect.left;\n          this.mousePosition.y = event.clientY - rect.top;\n\n          const dx = this.mousePosition.x - this.player1.x;\n          const dy = this.mousePosition.y - this.player1.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (this.isDragging) {\n            // Cap the power line's length to the circle radius\n            const clampedDistance = Math.min(distance, this.aimCircleRadius);\n            this.power = Math.round((clampedDistance / this.aimCircleRadius) * this.maxShotPower);\n            \n            // Update the line end positions\n            const angle = Math.atan2(dy, dx);\n            this.lineStopX = this.player1.x + clampedDistance * Math.cos(angle);\n            this.lineStopY = this.player1.y + clampedDistance * Math.sin(angle);\n            this.angle = -(angle * 180) / Math.PI;\n          }\n\n          // const dx = this.mousePosition.x - this.player1.x;\n          // const dy = this.mousePosition.y - this.player1.y;\n          // const distance = Math.sqrt(dx * dx + dy * dy);\n\n          // Show the aiming UI if the mouse is within the aiming circle range\n          this.isHovering = distance >= 1 && distance <= this.aimCircleRadius;\n\n          if (this.isHovering) {\n            //Calculate the angle between the tank and the mouse\n            if(!this.stopLine && this.isDragging){\n              this.angle = -(Math.atan2(dy, dx) * 180) / Math.PI;\n            }\n            this.drawAimCircle(this.player1);\n          }\n      },\n\n      onMouseClick(event) {\n        console.log(\"Clicked insideee the aim circle!\"); // Debug message\n        const rect = this.$refs.gameCanvas.getBoundingClientRect();\n        this.mousePosition.x = event.clientX - rect.left;\n        this.mousePosition.y = event.clientY - rect.top;\n\n        const dx = this.mousePosition.x - this.player1.x;\n        const dy = this.mousePosition.y - this.player1.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        // Show the aiming UI if the mouse is within the aiming circle range\n        this.isHovering = distance >= 1 && distance <= this.aimCircleRadius;\n\n        if (this.isHovering) {\n          this.angle = -(Math.atan2(dy, dx) * 180) / Math.PI;\n          this.power = Math.round((distance / this.aimCircleRadius) * this.maxShotPower);\n          this.stopLine = true;\n          this.stopLineX = this.mousePosition.x;\n          this.stopLineY = this.mousePosition.y;\n          this.drawAimCircle(this.player1);\n        }\n      },\n      \n      \n      drawTank(ctx, player) {\n\n        ctx.save();\n        this.player1.y = this.terrain[Math.floor(player.x)] - player.size / 2;\n        ctx.translate(player.x, this.player1.y);\n  \n        // Draw the tank body\n        ctx.fillStyle = this.player1.tankColor;\n        ctx.fillRect(-player.size / 2, -player.size / 4, player.size, player.size / 2);\n  \n        // Draw the tank turret\n        const turretLength = player.size * 0.7;\n        ctx.translate(0, -player.size / 7);\n        ctx.rotate((-this.angle * Math.PI) / 180);\n        ctx.fillStyle = this.player1.tankColor;\n        ctx.fillRect(0, -5, turretLength, 10);\n    \n        ctx.restore();\n      },\n\n      drawAimCircle(player){\n\n        // Get the canvas context\n        const canvas = this.$refs.gameCanvas;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n\n        // Draw the terrain\n        this.drawTerrain(ctx);\n        \n        // Draw player 1's tank\n        this.drawTank(ctx, this.player1);\n\n        //Draw player names\n        this.drawPlayerNames(ctx);\n\n        //Draw player health\n        this.drawPlayerHealth(ctx);\n\n        this.drawWind(ctx);\n\n        this.drawAnglePower(ctx);\n\n        const x = player.x;\n        const y = player.y;\n\n        ctx.beginPath();\n        ctx.arc(x, y, this.aimCircleRadius, 0, 2 * Math.PI);\n        // Fill the circle with a semi-transparent color\n        ctx.fillStyle = 'rgba(128, 128, 128, 0.5)';\n        ctx.fill();  // Fill first to apply transparency correctly\n\n        // Stroke the border of the circle\n        ctx.strokeStyle = \"black\";\n        ctx.stroke();\n\n        // Draw the power/shot line\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(this.lineStopX, this.lineStopY); // Use the updated stop positions\n        ctx.strokeStyle = \"red\";\n        ctx.stroke();\n\n      },\n    },\n  };\n  </script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap');\n\ncanvas {\n  font-family: 'Montserrat', sans-serif;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}