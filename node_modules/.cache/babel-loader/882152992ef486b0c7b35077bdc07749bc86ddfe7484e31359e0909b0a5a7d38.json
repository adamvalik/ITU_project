{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    isFlipped: {\n      type: Boolean,\n      default: false\n    },\n    defaultColor: {\n      type: String,\n      default: '#123456'\n    },\n    defaultTankType: {\n      type: Number,\n      default: 0\n    }\n  },\n  mounted() {\n    this.tankType = this.defaultTankType;\n    // if defaultColor is not one of the colorOptions, set customColor to defaultColor\n    if (!this.colorOptions.some(color => color.hex === this.defaultColor)) {\n      this.customColor = this.defaultColor;\n    }\n    this.changeColor(this.defaultColor);\n    this.emitSelectedTank();\n    this.emitSelectedColor();\n  },\n  data() {\n    return {\n      tankType: 0,\n      selectedColor: this.defaultColor,\n      colorOptions: [{\n        hex: \"#06B559\"\n      }, {\n        hex: \"#0D6BBD\"\n      }, {\n        hex: \"#BF1313\"\n      }],\n      customColor: null\n    };\n  },\n  watch: {\n    customColor(newColor) {\n      this.changeColor(newColor);\n    }\n  },\n  computed: {\n    gradientStyle() {\n      return this.customColor ? {\n        backgroundColor: this.customColor\n      } : {\n        background: `linear-gradient(217deg, rgb(255,0,0), rgb(255,0,0,0) 70%),\n                        linear-gradient(127deg, rgb(0,255,0), rgb(0,255,0,0) 70%),\n                        linear-gradient(336deg, rgb(0,0,255), rgb(0,0,255,0) 70%)`\n      };\n    }\n  },\n  methods: {\n    swapTank(direction) {\n      if (direction === \"left\") {\n        this.tankType = (this.tankType + 4) % 5;\n      } else if (direction === \"right\") {\n        this.tankType = (this.tankType + 1) % 5;\n      }\n      this.emitSelectedTank();\n      this.loadTank();\n    },\n    changeColor(newColor) {\n      this.color = newColor;\n      this.emitSelectedColor();\n      this.loadTank();\n    },\n    async loadTank() {\n      console.log(\"loadTank: this.selectedColor\", this.selectedColor, \", this.tankType\", this.tankType);\n      try {\n        const response = await axios.get(`http://localhost:8000/selector/${this.tankType}`);\n        this.$refs.svgContainer.innerHTML = response.data;\n\n        // wait until the next DOM update cycle\n        await this.$nextTick();\n\n        // apply color to tank\n        const elements = this.$refs.svgContainer.querySelectorAll(`[fill=\"#123456\"]`);\n        elements.forEach(element => {\n          element.setAttribute(\"fill\", this.color);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    emitSelectedTank() {\n      this.$emit('tank-selected', this.tankType);\n    },\n    emitSelectedColor() {\n      this.$emit('color-selected', this.color);\n    }\n  }\n};","map":{"version":3,"names":["axios","props","isFlipped","type","Boolean","default","defaultColor","String","defaultTankType","Number","mounted","tankType","colorOptions","some","color","hex","customColor","changeColor","emitSelectedTank","emitSelectedColor","data","selectedColor","watch","newColor","computed","gradientStyle","backgroundColor","background","methods","swapTank","direction","loadTank","console","log","response","get","$refs","svgContainer","innerHTML","$nextTick","elements","querySelectorAll","forEach","element","setAttribute","error","$emit"],"sources":["/home/antiphy/ITU/ITU_project/src/components/Selectors/TankSelector.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-center bg-gray-100\">\n    <div class=\"flex gap-4 items-center justify-between\">\n      <button @click=\"swapTank('left')\" class=\"h-10 w-10 bg-red-500 rounded-xl hover:border-2 border-gray-100 transition-all\"></button>\n\n      <div ref=\"svgContainer\" class=\"tank-container w-64 h-64 mb-4 shadow-xl\" :class=\"{ 'flip-x': isFlipped }\"></div>\n\n      <button @click=\"swapTank('right')\" class=\"h-10 w-10 bg-red-500 rounded-xl hover:border-2 border-gray-100 transition-all\"></button>\n    </div>\n\n    <!-- Color Change Buttons -->\n    <div class=\"flex gap-4\">\n    <!-- Color Buttons -->\n    <button\n      v-for=\"(color, index) in colorOptions\"\n      :key=\"index\"\n      :style=\"{ backgroundColor: color.hex }\"\n      @click=\"changeColor(color.hex)\"\n      class=\"w-14 h-14 rounded-3xl hover:border-2 border-gray-100 transition-all\"\n    ></button>\n\n    <!-- Custom Color Input -->\n    <label class=\"relative w-14 h-14 rounded-3xl cursor-pointer hover:border-2 border-gray-100 transition-all\">\n      <input v-model=\"customColor\" type=\"color\" class=\"absolute opacity-0 \">\n      <div\n        class=\"absolute inset-0 rounded-3xl flex items-center justify-center text-l font-bold\"\n        :style=\"gradientStyle\"\n      >\n        <span class=\"text-white\">+</span>\n      </div>\n    </label>\n  </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    isFlipped: {\n      type: Boolean,\n      default: false,\n    },\n    defaultColor: {\n      type: String,\n      default: '#123456',\n    },\n    defaultTankType: {\n      type: Number,\n      default: 0,\n    }\n  },\n  mounted() {\n    this.tankType = this.defaultTankType;\n    // if defaultColor is not one of the colorOptions, set customColor to defaultColor\n    if (!this.colorOptions.some((color) => color.hex === this.defaultColor)) {\n      this.customColor = this.defaultColor;\n    }\n    this.changeColor(this.defaultColor);\n    this.emitSelectedTank();\n    this.emitSelectedColor();\n  },\n  data() {\n    return {\n      tankType: 0,\n      selectedColor: this.defaultColor,\n      colorOptions: [\n        { hex: \"#06B559\" },\n        { hex: \"#0D6BBD\" },\n        { hex: \"#BF1313\" },\n      ],\n      customColor: null,\n    };\n  },\n  watch: {\n    customColor(newColor) {\n      this.changeColor(newColor);\n    }\n  },\n  computed: {\n    gradientStyle() {\n      return this.customColor\n        ? { backgroundColor: this.customColor }\n        : { background: `linear-gradient(217deg, rgb(255,0,0), rgb(255,0,0,0) 70%),\n                        linear-gradient(127deg, rgb(0,255,0), rgb(0,255,0,0) 70%),\n                        linear-gradient(336deg, rgb(0,0,255), rgb(0,0,255,0) 70%)` };\n    }\n  },\n  methods: {\n    swapTank(direction) {\n      if (direction === \"left\") {\n        this.tankType = (this.tankType + 4) % 5;\n      } else if (direction === \"right\") {\n        this.tankType = (this.tankType + 1) % 5;\n      }\n\n      this.emitSelectedTank();\n      this.loadTank();\n    },\n\n    changeColor(newColor) {\n      this.color = newColor;\n\n      this.emitSelectedColor();\n      this.loadTank();\n    },\n\n    async loadTank() {\n      console.log(\"loadTank: this.selectedColor\", this.selectedColor, \", this.tankType\", this.tankType);\n      try {\n        const response = await axios.get(`http://localhost:8000/selector/${this.tankType}`);\n\n        this.$refs.svgContainer.innerHTML = response.data;\n\n        // wait until the next DOM update cycle\n        await this.$nextTick();\n\n        // apply color to tank\n        const elements = this.$refs.svgContainer.querySelectorAll(`[fill=\"#123456\"]`);\n        elements.forEach((element) => {\n          element.setAttribute(\"fill\", this.color);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    emitSelectedTank() {\n      this.$emit('tank-selected', this.tankType);\n    },\n\n    emitSelectedColor() {\n      this.$emit('color-selected', this.color);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.tank-container {\n  background-color: white;\n  overflow: hidden;\n}\n\n.flip-x {\n  transform: scaleX(-1);\n}\n\ninput[type=\"color\"] {\n  -webkit-appearance: none;\n  appearance: none;\n  border: none;\n  cursor: pointer;\n}\n\ninput[type=\"color\"]::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n\ninput[type=\"color\"]::-webkit-color-swatch {\n  border: none;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}