{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"game-screen text-center mt-10\"\n};\nconst _hoisted_2 = {\n  class: \"block\"\n};\nconst _hoisted_3 = {\n  class: \"font-bold\"\n};\nconst _hoisted_4 = {\n  class: \"text-2xl\"\n};\nconst _hoisted_5 = {\n  class: \"controls mt-4 flex justify-center items-center gap-4\"\n};\nconst _hoisted_6 = {\n  class: \"block font-bold\"\n};\nconst _hoisted_7 = {\n  class: \"block font-bold\"\n};\nconst _hoisted_8 = {\n  class: \"h-48 bg-black bg-opacity-80 bg-neutral-900 text-white m-auto items-center justify-center flex flex-rows space-x-6\",\n  style: {\n    \"width\": \"1280px\"\n  }\n};\nconst _hoisted_9 = {\n  class: \"flex flex-col space-y-1\"\n};\nconst _hoisted_10 = {\n  class: \"relative\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"absolute top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50 flex justify-center items-center text-white text-2xl\"\n};\nconst _hoisted_12 = {\n  class: \"flex flex-rows space-x-8\"\n};\nconst _hoisted_13 = {\n  class: \"flex flex-col space-y-4\"\n};\nconst _hoisted_14 = {\n  class: \"font-bold text-white text-2xl\"\n};\nconst _hoisted_15 = {\n  class: \"flex flex-col space-y-2\"\n};\nconst _hoisted_16 = {\n  class: \"font-bold text-white text-2xl\"\n};\nconst _hoisted_17 = {\n  class: \"flex flex-col space-y-2, items-center\"\n};\nconst _hoisted_18 = {\n  class: \"font-bold text-white text-2xl\"\n};\nconst _hoisted_19 = {\n  class: \"flex flex-col space-y-3\"\n};\nconst _hoisted_20 = {\n  class: \"font-bold text-white text-2xl\"\n};\nconst _hoisted_21 = [\"width\", \"height\"];\nconst _hoisted_22 = {\n  ref: \"svgContainer\",\n  style: {\n    \"display\": \"none\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_cache[23] || (_cache[23] = _createElementVNode(\"h1\", {\n    class: \"text-2xl font-bold mb-4\"\n  }, \"Tanks\", -1 /* HOISTED */)), _createElementVNode(\"label\", _hoisted_2, [_createElementVNode(\"span\", _hoisted_3, [_cache[14] || (_cache[14] = _createTextVNode(\"Wind: \")), _createElementVNode(\"span\", _hoisted_4, _toDisplayString($data.wind), 1 /* TEXT */)]), _cache[15] || (_cache[15] = _createTextVNode(\" (positive for right, negative for left)\"))]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_6, \"Angle: \" + _toDisplayString($data.angle) + \"Â°\", 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"90\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.angle = $event),\n    class: \"w-32\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.angle]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_7, \"Power: \" + _toDisplayString($data.power), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"range\",\n    min: \"10\",\n    max: \"100\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.power = $event),\n    class: \"w-32\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.power]])])]), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" style=\\\"background: url('assets/metalbg.png') no-repeat center center; background-size: cover; width: 1280px;\\\"> \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    mouseover: \"showFireHelp\",\n    onMouseleave: _cache[2] || (_cache[2] = (...args) => $options.hideFireHelp && $options.hideFireHelp(...args)),\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.fireMissile && $options.fireMissile(...args)),\n    class: \"ml-4 w-96 h-16 bg-blue-300 bg-opacity-50 text-black rounded-lg border-4 border-black hover:bg-blue-400 font-bold text-4xl\"\n  }, \" WEAPON SELECTOR \", 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    mouseover: \"showFireHelp\",\n    onMouseleave: _cache[4] || (_cache[4] = (...args) => $options.hideFireHelp && $options.hideFireHelp(...args)),\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.fireMissile && $options.fireMissile(...args)),\n    class: \"ml-4 w-96 h-16 bg-gray-300 bg-opacity-50 rounded-lg border-4 border-black hover:bg-gray-400\"\n  }, _cache[16] || (_cache[16] = [_createElementVNode(\"div\", {\n    class: \"flex flex-row justify-center space-x-4\"\n  }, [_createElementVNode(\"div\", {\n    class: \"text-black font-bold text-3xl\"\n  }, \"SMALL MISSILE\"), _createElementVNode(\"div\", {\n    class: \"w-8 h-8\",\n    style: {\n      \"background\": \"url('assets/small_missile_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  }), _createElementVNode(\"div\", {\n    class: \"text-black font-bold text-3xl\"\n  }, \"20\")], -1 /* HOISTED */)]), 32 /* NEED_HYDRATION */)])]), _createCommentVNode(\" <img src=\\\"assets/small_missile_icon.png\\\" alt=\\\"Missile Icon\\\"> \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    onMouseover: _cache[6] || (_cache[6] = (...args) => $options.showFireHelp && $options.showFireHelp(...args)),\n    onMouseleave: _cache[7] || (_cache[7] = (...args) => $options.hideFireHelp && $options.hideFireHelp(...args)),\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.fireMissile && $options.fireMissile(...args)),\n    class: \"w-80 py-16 bg-red-300 bg-opacity-50 text-black rounded-lg border-4 border-black hover:bg-red-400 font-bold text-4xl\"\n  }, [_cache[17] || (_cache[17] = _createTextVNode(\" FIRE \")), $data.fireHelpVisible ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, \" Click to fire! \")) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]), _createCommentVNode(\" Row flex for money, time and so on \"), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"h1\", null, _toDisplayString($data.time) + \" (s)\", 1 /* TEXT */)]), _cache[18] || (_cache[18] = _createElementVNode(\"div\", {\n    class: \"w-16 h-16\",\n    style: {\n      \"background\": \"url('assets/time_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  }, null, -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"h1\", null, _toDisplayString($data.money) + \"$\", 1 /* TEXT */)]), _cache[19] || (_cache[19] = _createElementVNode(\"div\", {\n    class: \"w-20 h-20\",\n    style: {\n      \"background\": \"url('assets/money_bag_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  }, null, -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"h1\", null, _toDisplayString($data.fuel) + \"/\" + _toDisplayString($data.fuelMax), 1 /* TEXT */)]), _cache[20] || (_cache[20] = _createElementVNode(\"div\", {\n    class: \"w-20 h-20\",\n    style: {\n      \"background\": \"url('assets/fuel_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  }, null, -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"h1\", null, _toDisplayString($data.wins) + \"win\", 1 /* TEXT */)]), _cache[21] || (_cache[21] = _createElementVNode(\"div\", {\n    class: \"w-16 h-16\",\n    style: {\n      \"background\": \"url('assets/trophy_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  }, null, -1 /* HOISTED */))])]), _createCommentVNode(\" Pause button, absolute position from the bar\"), _cache[22] || (_cache[22] = _createElementVNode(\"div\", {\n    class: \"relative mb-16\"\n  }, [_createElementVNode(\"div\", {\n    class: \"w-20 h-20\",\n    style: {\n      \"background\": \"url('assets/pause_icon.png') no-repeat center center\",\n      \"background-size\": \"cover\"\n    }\n  })], -1 /* HOISTED */))])]), _createElementVNode(\"canvas\", {\n    ref: \"gameCanvas\",\n    width: $data.canvasWidth,\n    height: $data.canvasHeight,\n    class: \"border border-gray-700 m-auto\",\n    onMousemove: _cache[9] || (_cache[9] = (...args) => $options.onMouseMove && $options.onMouseMove(...args)),\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.onMouseClick && $options.onMouseClick(...args)),\n    onMouseleave: _cache[11] || (_cache[11] = (...args) => _ctx.onMouseLeave && _ctx.onMouseLeave(...args)),\n    onMouseup: _cache[12] || (_cache[12] = (...args) => $options.onMouseUp && $options.onMouseUp(...args)),\n    onMousedown: _cache[13] || (_cache[13] = (...args) => $options.onMouseDown && $options.onMouseDown(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_21), _cache[24] || (_cache[24] = _createElementVNode(\"img\", {\n    src: 'assets/svgtank1.svg',\n    alt: \"Tank\",\n    id: \"tankImage\",\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_22, null, 512 /* NEED_PATCH */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","key","ref","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createTextVNode","_hoisted_4","_toDisplayString","$data","wind","_hoisted_5","_hoisted_6","angle","type","min","max","_cache","$event","_hoisted_7","power","_hoisted_8","_createCommentVNode","_hoisted_9","mouseover","onMouseleave","args","$options","hideFireHelp","onClick","fireMissile","_hoisted_10","onMouseover","showFireHelp","fireHelpVisible","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","time","_hoisted_15","_hoisted_16","money","_hoisted_17","_hoisted_18","fuel","fuelMax","_hoisted_19","_hoisted_20","wins","width","canvasWidth","height","canvasHeight","onMousemove","onMouseMove","onMouseClick","_ctx","onMouseLeave","onMouseup","onMouseUp","onMousedown","onMouseDown","_hoisted_21","src","alt","id","_hoisted_22"],"sources":["/home/antiphy/ITU/ITU_project/src/views/GameScreen.vue"],"sourcesContent":["<template>\n    <div class=\"game-screen text-center mt-10\">\n      <h1 class=\"text-2xl font-bold mb-4\">Tanks</h1>\n      <label class=\"block\"><span class=\"font-bold\">Wind: <span class=\"text-2xl\">{{ wind }}</span> </span>  (positive for right, negative for left)</label>\n      <div class=\"controls mt-4 flex justify-center items-center gap-4\">\n        <div>\n          <label class=\"block font-bold\">Angle: {{ angle }}Â°</label>\n          <input \n            type=\"range\" \n            min=\"0\" \n            max=\"90\" \n            v-model=\"angle\" \n            class=\"w-32\"\n          />\n        </div>\n        <div>\n          <label class=\"block font-bold\">Power: {{ power }}</label>\n          <input \n            type=\"range\" \n            min=\"10\" \n            max=\"100\" \n            v-model=\"power\" \n            class=\"w-32\"\n          />\n        </div>\n      </div>\n      <div\n        class=\"h-48 bg-black bg-opacity-80 bg-neutral-900 text-white m-auto items-center justify-center flex flex-rows space-x-6\"\n        style=\"width: 1280px;\">\n        <!-- style=\"background: url('assets/metalbg.png') no-repeat center center; background-size: cover; width: 1280px;\"> -->\n\n        <div class=\"flex flex-col space-y-1\">\n          <div>\n            <button\n              mouseover=\"showFireHelp\"\n              @mouseleave=\"hideFireHelp\"\n              @click=\"fireMissile\"\n              class=\"ml-4 w-96 h-16 bg-blue-300 bg-opacity-50 text-black rounded-lg border-4 border-black hover:bg-blue-400 font-bold text-4xl\">\n              WEAPON SELECTOR\n            </button>\n          </div>\n\n          <div>\n            <button\n              mouseover=\"showFireHelp\"\n              @mouseleave=\"hideFireHelp\"\n              @click=\"fireMissile\"\n              class=\"ml-4 w-96 h-16 bg-gray-300 bg-opacity-50 rounded-lg border-4 border-black hover:bg-gray-400\">\n              <div class=\"flex flex-row justify-center space-x-4\">\n                <div class=\"text-black font-bold text-3xl\">SMALL MISSILE</div>\n                <div class=\"w-8 h-8\" style=\"background: url('assets/small_missile_icon.png') no-repeat center center; background-size: cover;\"></div>\n                <div class=\"text-black font-bold text-3xl\">20</div>\n              </div>\n               \n            </button>\n          </div>\n      </div>\n        <!-- <img src=\"assets/small_missile_icon.png\" alt=\"Missile Icon\"> -->\n\n        <div class=\"relative\">\n          <button\n              @mouseover=\"showFireHelp\"\n              @mouseleave=\"hideFireHelp\"\n              @click=\"fireMissile\"\n              class=\"w-80 py-16 bg-red-300 bg-opacity-50 text-black rounded-lg border-4 border-black hover:bg-red-400 font-bold text-4xl\">\n              FIRE\n            <span v-if=\"fireHelpVisible\" class=\"absolute top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50 flex justify-center items-center text-white text-2xl\">\n              Click to fire!\n            </span>\n          </button>\n        </div>\n\n        <!-- Row flex for money, time and so on -->\n        <div class =\"flex flex-rows space-x-8\">\n\n          <div class =\"flex flex-col space-y-4\">\n            <div class=\"font-bold text-white text-2xl\">\n              <h1>{{ time }} (s)</h1>\n            </div>\n            <div class = \"w-16 h-16\" style=\"background: url('assets/time_icon.png') no-repeat center center; background-size: cover;\"></div>\n          </div>\n\n          <div class =\"flex flex-col space-y-2\">\n            <div class=\"font-bold text-white text-2xl\">\n              <h1>{{ money }}$</h1>\n            </div>\n            <div class = \"w-20 h-20\" style=\"background: url('assets/money_bag_icon.png') no-repeat center center; background-size: cover;\"></div>\n          </div>\n\n          <div class =\"flex flex-col space-y-2, items-center\">\n            <div class=\"font-bold text-white text-2xl\">\n              <h1>{{ fuel }}/{{ fuelMax }}</h1>\n            </div>\n            <div class = \"w-20 h-20\" style=\"background: url('assets/fuel_icon.png') no-repeat center center; background-size: cover;\"></div>\n          </div>\n\n          <div class =\"flex flex-col space-y-3\">\n            <div class=\"font-bold text-white text-2xl\">\n              <h1>{{ wins }}win</h1>\n            </div>\n            <div class = \"w-16 h-16\" style=\"background: url('assets/trophy_icon.png') no-repeat center center; background-size: cover;\"></div>\n          </div>\n\n        </div>\n\n        <!-- Pause button, absolute position from the bar-->\n        <div class=\"relative mb-16\">\n          <div class=\"w-20 h-20\" style=\"background: url('assets/pause_icon.png') no-repeat center center; background-size: cover;\"></div>\n        </div>\n\n        \n        \n      </div>\n\n    </div>\n      <canvas \n        ref=\"gameCanvas\" \n        :width=\"canvasWidth\" \n        :height=\"canvasHeight\" \n        class=\"border border-gray-700 m-auto\"\n        @mousemove=\"onMouseMove\"\n        @click=\"onMouseClick\"\n        @mouseleave=\"onMouseLeave\"\n        @mouseup=\"onMouseUp\"\n        @mousedown=\"onMouseDown\"\n      ></canvas>\n      <img :src=\"'assets/svgtank1.svg'\" alt=\"Tank\" id=\"tankImage\" style=\"display: none;\"/>\n\n      <div ref=\"svgContainer\" style=\"display: none;\"></div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  export default {\n    name: \"GameScreen\",\n    data() {\n      return {\n        canvasWidth: 1280,\n        canvasHeight: 720,\n        terrain: [],\n        player1: {\n          x: 100,\n          y: 370,\n          size: 40,\n          angle: 45,\n          power: 50,\n          tankColor: \"green\",\n          name: \"DJ Khaled\",\n          health: 100,\n        },\n        mousePosition: {\n          x: 0,\n          y: 0,\n        },\n        isHovering: false,\n        aimCircleRadius: 200,\n        maxShotPower: 100,\n        minShotPower: 1,\n        minShotDistance: 50,\n        stopLine: false,\n        lineStopX: 200,\n        lineStopY: 400,\n        isDragging: false,\n        imgTank: null,\n\n        wind: 0,\n        missile: null,\n        angle: 45,\n        power: 50,\n        gameOver: false,\n        fireHelpVisible: false,\n        time: 10,\n        money: 4000,\n        fuel: 100,\n        fuelMax: 250,\n        wins: 1,\n      };\n    },\n    mounted() {\n      this.obtainTankSVG();\n      this.wind = 0;//Math.floor(Math.random() * 100 - 50); \n      this.player1.tankColor = \"green\"; //this.$route.query.color;\n      this.startTimer();\n      this.generateTerrain();\n      this.renderGame();\n      //const canvas = this.$refs.gameCanvas;\n      //const ctx = canvas.getContext(\"2d\");\n      //this.drawTank(ctx);\n    },\n    methods: {\n\n      async obtainTankSVG(){\n        try {\n          // Fetch the SVG from the FastAPI endpoint\n          const response = await axios.get(`http://localhost:8000/players/tank1`, {\n            responseType: 'text', // Ensure we get raw text\n          });\n\n          // Append the SVG to the container\n          // this.$refs.svgContainer.innerHTML = response.data;\n\n\n          // Create a Blob from the SVG data\n          const svgBlob = new Blob([response.data], { type: 'image/svg+xml' });\n\n          // Create an object URL for the Blob\n          const url = URL.createObjectURL(svgBlob);\n\n          // Create an Image element\n          this.imgTank = new Image();\n\n          // Set the image source to the Blob URL\n          this.imgTank.src = url;\n\n          console.log('Fetched tank SVG:', response.data);\n        } catch (error) {\n          console.log('Error fetching tank SVG:', error);\n        }\n      },\n\n      showFireHelp() {\n        this.fireHelpVisible = true;\n      },\n      hideFireHelp() {\n        this.fireHelpVisible = false;\n      },\n\n      drawPlayerNames(ctx) {\n        ctx.save();\n\n        //size of rectangles for healthbars\n        const player1X = 10 + 200 / 2;\n        const player2X = 1070 + 200 / 2;\n\n        ctx.font = \"28px Montserrat\";\n        ctx.fillStyle = \"black\";\n        // ctx.textAlign = \"left\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.player1.name, player1X, 30);\n        ctx.fillText(\"Player 2\", player2X, 30);\n        ctx.restore();\n      },\n\n      drawPlayerHealth(ctx){\n        ctx.save();\n        // const canvas = this.$refs.canvas;\n        // const ctx = canvas.getContext('2d');\n\n        ctx.fillStyle = 'black'; // White color\n        ctx.fillRect(10, 50, 200, 40);\n\n        ctx.fillRect(1070, 50, 200, 40);\n\n        // Draw red fill\n        ctx.fillStyle = '#FF0000'; // Red color\n        ctx.fillRect(10, 50, 180, 40); // Adjusted for border thickness\n        ctx.fillRect(1070, 50, 180, 40); // Adjusted for border thickness\n\n        //Draw outline\n        ctx.strokeStyle = 'gray';\n        ctx.lineWidth = 5; // Border width\n        ctx.strokeRect(10, 50, 200, 40);\n        ctx.strokeRect(1070, 50, 200, 40);\n\n        ctx.fillStyle = '#000000'; // Text color\n        ctx.font = '20px Montserrat';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText('80/100', 110, 70);\n        ctx.fillText('80/100', 1170, 70);\n\n        ctx.restore();\n      },\n\n      startTimer() {\n        setInterval(() => {\n          if (this.time > 0) {\n            this.time--;\n          } else {\n            this.gameOver = true;\n          }\n        }, 1000);\n      },\n\n      generateTerrain() {\n        // Generate a simple random terrain within 2/3 of the canvas height\n        const maxTerrainHeight = (this.canvasHeight * 2) / 3;\n        this.terrain = new Array(this.canvasWidth).fill(0).map((_, x) => {\n          const baseHeight = maxTerrainHeight; // Base height is 2/3 of the canvas height\n          const variation = Math.sin(x * 0.06) * 15 + Math.sin(x * 0.1) * 10 + Math.sin(x * 0.01) * 50;\n          return baseHeight + variation;\n        });\n      },\n\n      fireMissile() {\n        const startX = this.player1.x + 15;\n        const startY = this.player1.y - 15; //this.terrain[Math.floor(player.x)] - player.size / 2\n        const controlX = startX + Math.cos(this.angle * (Math.PI / 180)) * this.power * 5 + this.wind * 4;\n        const controlY = startY - Math.sin(this.angle * (Math.PI / 180)) * this.power * 5;\n        const endX = controlX + Math.cos(this.angle * (Math.PI / 180)) * this.power * 5 + this.wind * 8;\n        const endY = this.canvasHeight;\n  \n        this.missile = {\n          t: 0,\n          startX,\n          startY,\n          controlX,\n          controlY,\n          endX,\n          endY,\n        };\n  \n        this.animateMissile();\n      },\n      animateMissile() {\n        if (!this.missile) return;\n  \n        const { t, startX, startY, controlX, controlY, endX, endY } = this.missile;\n  \n        const x = (1 - t) * (1 - t) * startX + 2 * (1 - t) * t * controlX + t * t * endX;\n        const y = (1 - t) * (1 - t) * startY + 2 * (1 - t) * t * controlY + t * t * endY;\n  \n        this.missile.t += 0.01;\n        if (this.missile.t >= 1 || this.checkTerrainCollision(x, y)) {\n          this.explodeTerrain(x, y);\n          this.missile = null;\n          this.gameOver = true;\n          return;\n        }\n  \n        this.renderGame();\n  \n        const canvas = this.$refs.gameCanvas;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.arc(x, y, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = \"red\";\n        ctx.fill();\n  \n        requestAnimationFrame(this.animateMissile);\n      },\n      checkTerrainCollision(x, y) {\n        // Check if the missile hit the terrain\n        return y >= this.terrain[Math.floor(x)];\n      },\n      explodeTerrain(x, y) {\n        // Create a circular explosion in the terrain\n        const explosionRadius = 20;\n        for (let i = -explosionRadius; i <= explosionRadius; i++) {\n          const pos = Math.floor(x) + i;\n          if (pos >= 0 && pos < this.canvasWidth) {\n            const distance = Math.sqrt(i * i);\n            if (distance <= explosionRadius) {\n              const impactDepth = Math.sqrt(explosionRadius * explosionRadius - distance * distance);\n              this.terrain[pos] = Math.max(this.terrain[pos], y + impactDepth);\n            }\n          }\n        }\n        this.renderGame();\n        this.wind = 0;//Math.floor(Math.random() * 100 - 50); \n\n      },\n      renderGame() {\n        const canvas = this.$refs.gameCanvas;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n\n        // Draw the terrain\n        this.drawTerrain(ctx);\n  \n        // Draw player 1's tank\n        this.drawTank(ctx, this.player1);\n\n        //Draw player names\n        this.drawPlayerNames(ctx);\n\n        //Draw player health\n        this.drawPlayerHealth(ctx);\n\n        this.drawAimCircle(ctx, this.player1);\n\n      },\n      drawTerrain(ctx) {\n        ctx.beginPath();\n        ctx.moveTo(0, this.canvasHeight);\n        for (let x = 0; x < this.terrain.length; x++) {\n          ctx.lineTo(x, this.terrain[x]);\n        }\n        ctx.lineTo(this.canvasWidth, this.canvasHeight);\n        ctx.closePath();\n        ctx.fillStyle = \"saddlebrown\";\n        ctx.fill();\n      },\n\n      onMouseDown(event) {\n        const rect = this.$refs.gameCanvas.getBoundingClientRect();\n        this.mousePosition.x = event.clientX - rect.left;\n        this.mousePosition.y = event.clientY - rect.top;\n\n        // Check if the click is within the aim circle\n        if (this.isHovering) {\n          this.isDragging = true; // Start dragging\n          this.lineStopX = this.mousePosition.x; // Initialize line stop positions\n          this.lineStopY = this.mousePosition.y;\n        }\n      },\n\n      onMouseUp() {\n        this.isDragging = false; // Stop dragging\n      },\n\n      onMouseMove(event) {\n          const rect = this.$refs.gameCanvas.getBoundingClientRect();\n          this.mousePosition.x = event.clientX - rect.left;\n          this.mousePosition.y = event.clientY - rect.top;\n\n          const dx = this.mousePosition.x - this.player1.x;\n          const dy = this.mousePosition.y - this.player1.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (this.isDragging) {\n            // Cap the power line's length to the circle radius\n            const clampedDistance = Math.min(distance, this.aimCircleRadius);\n            this.power = Math.round((clampedDistance / this.aimCircleRadius) * this.maxShotPower);\n            \n            // Update the line end positions\n            const angle = Math.atan2(dy, dx);\n            this.lineStopX = this.player1.x + clampedDistance * Math.cos(angle);\n            this.lineStopY = this.player1.y + clampedDistance * Math.sin(angle);\n            this.angle = -(angle * 180) / Math.PI;\n          }\n\n          // const dx = this.mousePosition.x - this.player1.x;\n          // const dy = this.mousePosition.y - this.player1.y;\n          // const distance = Math.sqrt(dx * dx + dy * dy);\n\n          // Show the aiming UI if the mouse is within the aiming circle range\n          this.isHovering = distance >= 1 && distance <= this.aimCircleRadius;\n\n          if (this.isHovering) {\n            //Calculate the angle between the tank and the mouse\n            if(!this.stopLine){\n              this.angle = (Math.atan2(dy, dx) * 180) / Math.PI;\n            }\n            //this.drawAimCircle(this.player1);\n          }\n      },\n\n      onMouseClick(event) {\n        console.log(\"Clicked insideee the aim circle!\"); // Debug message\n        const rect = this.$refs.gameCanvas.getBoundingClientRect();\n        this.mousePosition.x = event.clientX - rect.left;\n        this.mousePosition.y = event.clientY - rect.top;\n\n        const dx = this.mousePosition.x - this.player1.x;\n        const dy = this.mousePosition.y - this.player1.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        // Show the aiming UI if the mouse is within the aiming circle range\n        this.isHovering = distance >= 1 && distance <= this.aimCircleRadius;\n\n        if (this.isHovering) {\n          this.angle = -(Math.atan2(dy, dx) * 180) / Math.PI;\n          this.stopLine = true;\n          this.stopLineX = this.mousePosition.x;\n          this.stopLineY = this.mousePosition.y;\n          this.drawAimCircle(this.player1);\n        }\n      },\n      \n      \n      drawTank(ctx, player) {\n        ctx.save();\n\n        this.player1.y = this.terrain[Math.floor(player.x)] - player.size / 2;\n        ctx.save();\n        ctx.translate(player.x, this.player1.y);\n  \n        // Draw the tank body\n        ctx.fillStyle = this.player1.tankColor;\n        ctx.fillRect(-player.size / 2, -player.size / 4, player.size, player.size / 2);\n  \n        // Draw the tank turret\n        const turretLength = player.size * 0.7;\n        ctx.translate(0, -player.size / 7);\n        ctx.rotate((-this.angle * Math.PI) / 180);\n        ctx.fillStyle = this.player1.tankColor;\n        ctx.fillRect(0, -5, turretLength, 10);\n\n        // ctx.translate(player.x, this.player1.y - player.size / 2)\n        // If you want to draw the SVG on a canvas, you'll need to convert it to an image first.\n        // Extract the inner HTML of the hidden div (which contains the SVG text)\n\n        // Create a Blob from the SVG text\n        \n\n        // Once the image has loaded, draw it on the canvas\n        // this.imgTank.onload = () => {\n        //     // Define the desired size for the tank (you can adjust these values)\n        //     const tankWidth = this.imgTank.width / 2;\n        //     const tankHeight = this.imgTank.height / 2;\n\n        //     // Draw the tank at the player's position\n        //     ctx.drawImage(this.imgTank, player.x - tankWidth / 2, this.player1.y - tankHeight / 2, tankWidth, tankHeight);\n        // };\n        // Load the tank image\n        // const img = document.getElementById('tankImage');\n\n        // // Define the desired size for the tank\n        // const tankWidth = img.width / 2; // Change this value to adjust the width\n        // const tankHeight = img.height / 2; // Change this value to adjust the height\n\n        // // Draw the tank image at the player's position with the specified size\n        // ctx.drawImage(img, player.x - tankWidth / 2, this.player1.y - tankHeight / 2, tankWidth, tankHeight); // Center the tank image\n        \n\n        ctx.restore();\n      },\n\n      drawAimCircle(ctx, player){\n\n        // Get the canvas context\n        // const canvas = this.$refs.gameCanvas;\n        // const ctx = canvas.getContext('2d');\n        //this.renderGame();\n        ctx.save();\n\n        const x = player.x;\n        const y = player.y;\n\n        ctx.beginPath();\n        ctx.arc(x, y, this.aimCircleRadius, 0, 2 * Math.PI);\n        // Fill the circle with a semi-transparent color\n        ctx.fillStyle = 'rgba(128, 128, 128, 0.5)';\n        ctx.fill();  // Fill first to apply transparency correctly\n\n        // Stroke the border of the circle\n        ctx.strokeStyle = \"black\";\n        ctx.stroke();\n\n        // Draw the power/shot line\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(this.lineStopX, this.lineStopY); // Use the updated stop positions\n        ctx.strokeStyle = \"red\";\n        ctx.stroke();\n        ctx.restore();\n\n      },\n    },\n  };\n  </script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap');\n\ncanvas {\n  font-family: 'Montserrat', sans-serif;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}