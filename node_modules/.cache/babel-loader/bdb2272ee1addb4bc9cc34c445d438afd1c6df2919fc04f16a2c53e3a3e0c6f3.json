{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_background_music = _resolveComponent(\"background-music\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_background_music, {\n    ref: \"backgroundMusic\"\n  }, null, 512 /* NEED_PATCH */), _createVNode(_component_router_view, {\n    onPlayMusic: $options.playMusic,\n    onUpdateMusicVolume: $options.updateMusicVolume,\n    onToggleMute: $options.toggleMute\n  }, null, 8 /* PROPS */, [\"onPlayMusic\", \"onUpdateMusicVolume\", \"onToggleMute\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_background_music","ref","_component_router_view","onPlayMusic","$options","playMusic","onUpdateMusicVolume","updateMusicVolume","onToggleMute","toggleMute"],"sources":["/home/antiphy/ITU/ITU_project/src/App.vue"],"sourcesContent":["<template>\n  <background-music ref=\"backgroundMusic\"/>\n  <router-view @playMusic=\"playMusic\" @updateMusicVolume=\"updateMusicVolume\" @toggleMute=\"toggleMute\" />\n</template>\n\n<script>\nimport BackgroundMusic from './components/Settings/BackgroundMusic.vue';\nexport default {\n  components: {\n    BackgroundMusic\n  },\n  methods: {\n    playMusic() {\n      this.$refs.backgroundMusic.play();\n    },\n    updateMusicVolume(volume) {\n      this.$refs.backgroundMusic.updateVolume(volume);\n    },\n    toggleMute(isMuted) {\n      this.$refs.backgroundMusic.toggleMute(isMuted);\n    }\n  }\n};\n</script>"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAyCC,2BAAA;IAAvBC,GAAG,EAAC;EAAiB,gCACvCF,YAAA,CAAsGG,sBAAA;IAAxFC,WAAS,EAAEC,QAAA,CAAAC,SAAS;IAAGC,mBAAiB,EAAEF,QAAA,CAAAG,iBAAiB;IAAGC,YAAU,EAAEJ,QAAA,CAAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}