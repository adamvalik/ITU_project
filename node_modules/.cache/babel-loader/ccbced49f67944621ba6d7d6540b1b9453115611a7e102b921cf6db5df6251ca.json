{"ast":null,"code":"import SkillSelector from '@/components/Selectors/SkillSelector.vue';\nimport TankSelector from '@/components/Selectors/TankSelector.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    TankSelector,\n    SkillSelector\n  },\n  data() {\n    return {\n      loading: true,\n      player1: {\n        name: null,\n        tankType: 0,\n        color: '#06B559',\n        armor: 0,\n        power: 0,\n        speed: 0,\n        skillPoints: 6,\n        money: 10000,\n        fuel: 250,\n        health: 100,\n        weapon1: 0,\n        weapon2: 0,\n        weapon3: 0\n      },\n      player2: {\n        name: null,\n        tankType: 1,\n        color: '#0D6BBD',\n        armor: 0,\n        power: 0,\n        speed: 0,\n        skillPoints: 6,\n        money: 10000,\n        fuel: 250,\n        health: 100,\n        weapon1: 0,\n        weapon2: 0,\n        weapon3: 0\n      }\n    };\n  },\n  async mounted() {\n    await this.fetchData();\n  },\n  methods: {\n    updateTankSelection(player, selectedTank) {\n      if (player === 1) {\n        this.player1.tankType = selectedTank;\n      } else {\n        this.player2.tankType = selectedTank;\n      }\n    },\n    updateColorSelection(player, selectedColor) {\n      if (player === 1) {\n        this.player1.color = selectedColor;\n      } else {\n        this.player2.color = selectedColor;\n      }\n    },\n    updateSkillLevel(player, skill, level) {\n      if (player === 1) {\n        if (skill === 'armor') {\n          this.player1.armor = level;\n        } else if (skill === 'power') {\n          this.player1.power = level;\n        } else if (skill === 'speed') {\n          this.player1.speed = level;\n        }\n      } else {\n        if (skill === 'armor') {\n          this.player2.armor = level;\n        } else if (skill === 'power') {\n          this.player2.power = level;\n        } else if (skill === 'speed') {\n          this.player2.speed = level;\n        }\n      }\n    },\n    updateFreePoints(player, points) {\n      if (player === 1) {\n        this.player1.skillPoints = points;\n      } else {\n        this.player2.skillPoints = points;\n      }\n    },\n    async fetchData() {\n      try {\n        const response = await axios.get('http://localhost:8000/players');\n        console.log('Fetched players:', response.data);\n        const players = response.data;\n        if (players[0]) {\n          this.player1 = players[0];\n        }\n        if (players[1]) {\n          this.player2 = players[1];\n        }\n        this.loading = false;\n      } catch (error) {\n        console.error(error);\n        this.loading = false;\n      }\n    },\n    async submitData() {\n      // default names\n      if (!this.player1.name) {\n        this.player1.name = \"Player 1\";\n      }\n      if (!this.player2.name) {\n        this.player2.name = \"Player 2\";\n      }\n      try {\n        await axios.post('http://localhost:8000/players/0', this.player1);\n        await axios.post('http://localhost:8000/players/1', this.player2);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async deleteData() {\n      try {\n        await axios.delete('http://localhost:8000/players');\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["SkillSelector","TankSelector","axios","components","data","loading","player1","name","tankType","color","armor","power","speed","skillPoints","money","fuel","health","weapon1","weapon2","weapon3","player2","mounted","fetchData","methods","updateTankSelection","player","selectedTank","updateColorSelection","selectedColor","updateSkillLevel","skill","level","updateFreePoints","points","response","get","console","log","players","error","submitData","post","deleteData","delete"],"sources":["/home/antiphy/ITU/ITU_project/src/views/ChooseTankView.vue"],"sourcesContent":["<template>\n  <div class=\"flex\">\n    <!-- Left Side (Player 1) -->\n    <div class=\"w-1/2 flex flex-col items-center justify-center border-r-2 border-gray-300\">\n\n      <!-- Player 1 Name Input -->\n      <div class=\"mb-4\">\n        <label class=\"block font-semibold\">Enter Name:</label>\n        <input v-model=\"player1.name\" type=\"text\" placeholder=\"Player 1 Name\" class=\"border rounded px-3 py-2 mt-2\">\n      </div>\n\n      <!-- Player 1 Tank Type -->\n      <!-- Conditionally render the TankSelector once data has been fetched -->\n      <tank-selector v-if=\"!loading\" @tank-selected=\"updateTankSelection(1, $event)\" @color-selected=\"updateColorSelection(1, $event)\" :defaultColor=\"player1.color\" :defaultTankType=\"player1.tankType\" />\n      <div>\n        <label class=\"font-semibold\">Free Skill Points:</label><span class=\"font-semibold\">{{ player1.skillPoints }}</span>\n        <skill-selector v-if=\"!loading\" :currentLevel=\"player1.armor\" :freePoints=\"player1.skillPoints\" @update-skill=\"updateSkillLevel(1, 'armor', $event)\" @update-free-points=\"updateFreePoints(1, $event)\" />\n        <skill-selector v-if=\"!loading\" :currentLevel=\"player1.power\" :freePoints=\"player1.skillPoints\" @update-skill=\"updateSkillLevel(1, 'power', $event)\" @update-free-points=\"updateFreePoints(1, $event)\" />\n        <skill-selector v-if=\"!loading\" :currentLevel=\"player1.speed\" :freePoints=\"player1.skillPoints\" @update-skill=\"updateSkillLevel(1, 'speed', $event)\" @update-free-points=\"updateFreePoints(1, $event)\" />\n      </div>\n    </div>\n\n    <!-- Right Side (Player 2) -->\n    <div class=\"w-1/2 flex flex-col items-center justify-center\">\n\n      <!-- Player 2 Name Input -->\n      <div class=\"mb-4\">\n        <label class=\"block font-semibold\">Enter Name:</label>\n        <input v-model=\"player2.name\" type=\"text\" placeholder=\"Player 2 Name\" class=\"border rounded px-3 py-2 mt-2\">\n      </div>\n\n      <!-- Player 2 Tank Type -->\n      <!-- Conditionally render the TankSelector once data has been fetched -->\n      <tank-selector v-if=\"!loading\" @tank-selected=\"updateTankSelection(2, $event)\" @color-selected=\"updateColorSelection(2, $event)\" :is-flipped=\"true\" :defaultColor=\"player2.color\" :defaultTankType=\"player2.tankType\" />\n      <div>\n        <label class=\"font-semibold\">Free Skill Points:</label><span class=\"font-semibold\">{{ player2.skillPoints }}</span>\n        <skill-selector v-if=\"!loading\" :currentLevel=\"player2.armor\" :freePoints=\"player2.skillPoints\" @update-skill=\"updateSkillLevel(2, 'armor', $event)\" @update-free-points=\"updateFreePoints(2, $event)\" />\n        <skill-selector v-if=\"!loading\" :currentLevel=\"player2.power\" :freePoints=\"player2.skillPoints\" @update-skill=\"updateSkillLevel(2, 'power', $event)\" @update-free-points=\"updateFreePoints(2, $event)\" />\n        <skill-selector v-if=\"!loading\" :currentLevel=\"player2.speed\" :freePoints=\"player2.skillPoints\" @update-skill=\"updateSkillLevel(2, 'speed', $event)\" @update-free-points=\"updateFreePoints(2, $event)\" />\n      </div>\n    </div>\n\n    <!-- Footer Buttons -->\n    <div class=\"absolute bottom-4 left-0 right-0 flex justify-between px-8\">\n      <!-- Back to Main Page Button -->\n      <router-link to=\"/\" @click=\"deleteData\" class=\"px-6 py-3 bg-gray-500 text-white font-semibold rounded-lg hover:bg-gray-600 transition duration-200\">\n        Back to Main Page\n      </router-link>\n\n      <!-- Proceed to Game Button -->\n      <router-link to=\"/chooseMap\" @click=\"submitData\" class=\"px-6 py-3 bg-green-500 text-white font-semibold rounded-lg hover:bg-green-600 transition duration-200\">\n        Choose Map\n      </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SkillSelector from '@/components/Selectors/SkillSelector.vue';\nimport TankSelector from '@/components/Selectors/TankSelector.vue';\nimport axios from 'axios';\n\nexport default {\n  components: {\n    TankSelector,\n    SkillSelector\n  },\n  data() {\n    return {\n      loading: true,\n      player1: {\n        name: null,\n        tankType: 0,\n        color: '#06B559',\n        armor: 0,\n        power: 0,\n        speed: 0,\n        skillPoints: 6,\n        money: 10000,\n        fuel: 250,\n        health: 100,\n        weapon1: 0,\n        weapon2: 0,\n        weapon3: 0,\n      },\n      player2: {\n        name: null,\n        tankType: 1,\n        color: '#0D6BBD',\n        armor: 0,\n        power: 0,\n        speed: 0,\n        skillPoints: 6,\n        money: 10000,\n        fuel: 250,\n        health: 100,\n        weapon1: 0,\n        weapon2: 0,\n        weapon3: 0,\n      }\n    };\n  },\n  async mounted() {\n    await this.fetchData();\n  },\n  methods: {\n    updateTankSelection(player, selectedTank) {\n      if (player === 1) {\n        this.player1.tankType = selectedTank;\n      } else {\n        this.player2.tankType = selectedTank;\n      }\n    },\n\n    updateColorSelection(player, selectedColor) {\n      if (player === 1) {\n        this.player1.color = selectedColor;\n      } else {\n        this.player2.color = selectedColor;\n      }\n    },\n\n    updateSkillLevel(player, skill, level) {\n      if (player === 1) {\n        if (skill === 'armor') {\n          this.player1.armor = level;\n        } else if (skill === 'power') {\n          this.player1.power = level;\n        } else if (skill === 'speed') {\n          this.player1.speed = level;\n        }\n      } else {\n        if (skill === 'armor') {\n          this.player2.armor = level;\n        } else if (skill === 'power') {\n          this.player2.power = level;\n        } else if (skill === 'speed') {\n          this.player2.speed = level;\n        }\n      }\n    },\n\n    updateFreePoints(player, points) {\n      if (player === 1) {\n        this.player1.skillPoints = points;\n      } else {\n        this.player2.skillPoints = points;\n      }\n    },\n\n    async fetchData() {\n      try {\n        const response = await axios.get('http://localhost:8000/players');\n        console.log('Fetched players:', response.data);\n        const players = response.data;\n\n        if (players[0]) {\n          this.player1 = players[0];\n        }\n        if (players[1]) {\n          this.player2 = players[1];\n        }\n\n        this.loading = false;\n      } catch (error) {\n        console.error(error);\n        this.loading = false;\n      }\n    },\n\n    async submitData() {\n      // default names\n      if (!this.player1.name) {\n        this.player1.name = \"Player 1\";\n      }\n      if (!this.player2.name) {\n        this.player2.name = \"Player 2\";\n      }\n\n      try {\n        await axios.post('http://localhost:8000/players/0', this.player1);\n        await axios.post('http://localhost:8000/players/1', this.player2);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async deleteData() {\n      try {\n        await axios.delete('http://localhost:8000/players');\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n  }\n}\n</script>\n"],"mappings":"AA0DA,OAAOA,aAAY,MAAO,0CAA0C;AACpE,OAAOC,YAAW,MAAO,yCAAyC;AAClE,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVF,YAAY;IACZD;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;QACPC,IAAI,EAAE,IAAI;QACVC,QAAQ,EAAE,CAAC;QACXC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,CAAC;QACRC,WAAW,EAAE,CAAC;QACdC,KAAK,EAAE,KAAK;QACZC,IAAI,EAAE,GAAG;QACTC,MAAM,EAAE,GAAG;QACXC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;QACPb,IAAI,EAAE,IAAI;QACVC,QAAQ,EAAE,CAAC;QACXC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,CAAC;QACRC,WAAW,EAAE,CAAC;QACdC,KAAK,EAAE,KAAK;QACZC,IAAI,EAAE,GAAG;QACTC,MAAM,EAAE,GAAG;QACXC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EACD,MAAME,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACPC,mBAAmBA,CAACC,MAAM,EAAEC,YAAY,EAAE;MACxC,IAAID,MAAK,KAAM,CAAC,EAAE;QAChB,IAAI,CAACnB,OAAO,CAACE,QAAO,GAAIkB,YAAY;MACtC,OAAO;QACL,IAAI,CAACN,OAAO,CAACZ,QAAO,GAAIkB,YAAY;MACtC;IACF,CAAC;IAEDC,oBAAoBA,CAACF,MAAM,EAAEG,aAAa,EAAE;MAC1C,IAAIH,MAAK,KAAM,CAAC,EAAE;QAChB,IAAI,CAACnB,OAAO,CAACG,KAAI,GAAImB,aAAa;MACpC,OAAO;QACL,IAAI,CAACR,OAAO,CAACX,KAAI,GAAImB,aAAa;MACpC;IACF,CAAC;IAEDC,gBAAgBA,CAACJ,MAAM,EAAEK,KAAK,EAAEC,KAAK,EAAE;MACrC,IAAIN,MAAK,KAAM,CAAC,EAAE;QAChB,IAAIK,KAAI,KAAM,OAAO,EAAE;UACrB,IAAI,CAACxB,OAAO,CAACI,KAAI,GAAIqB,KAAK;QAC5B,OAAO,IAAID,KAAI,KAAM,OAAO,EAAE;UAC5B,IAAI,CAACxB,OAAO,CAACK,KAAI,GAAIoB,KAAK;QAC5B,OAAO,IAAID,KAAI,KAAM,OAAO,EAAE;UAC5B,IAAI,CAACxB,OAAO,CAACM,KAAI,GAAImB,KAAK;QAC5B;MACF,OAAO;QACL,IAAID,KAAI,KAAM,OAAO,EAAE;UACrB,IAAI,CAACV,OAAO,CAACV,KAAI,GAAIqB,KAAK;QAC5B,OAAO,IAAID,KAAI,KAAM,OAAO,EAAE;UAC5B,IAAI,CAACV,OAAO,CAACT,KAAI,GAAIoB,KAAK;QAC5B,OAAO,IAAID,KAAI,KAAM,OAAO,EAAE;UAC5B,IAAI,CAACV,OAAO,CAACR,KAAI,GAAImB,KAAK;QAC5B;MACF;IACF,CAAC;IAEDC,gBAAgBA,CAACP,MAAM,EAAEQ,MAAM,EAAE;MAC/B,IAAIR,MAAK,KAAM,CAAC,EAAE;QAChB,IAAI,CAACnB,OAAO,CAACO,WAAU,GAAIoB,MAAM;MACnC,OAAO;QACL,IAAI,CAACb,OAAO,CAACP,WAAU,GAAIoB,MAAM;MACnC;IACF,CAAC;IAED,MAAMX,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMY,QAAO,GAAI,MAAMhC,KAAK,CAACiC,GAAG,CAAC,+BAA+B,CAAC;QACjEC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAAC9B,IAAI,CAAC;QAC9C,MAAMkC,OAAM,GAAIJ,QAAQ,CAAC9B,IAAI;QAE7B,IAAIkC,OAAO,CAAC,CAAC,CAAC,EAAE;UACd,IAAI,CAAChC,OAAM,GAAIgC,OAAO,CAAC,CAAC,CAAC;QAC3B;QACA,IAAIA,OAAO,CAAC,CAAC,CAAC,EAAE;UACd,IAAI,CAAClB,OAAM,GAAIkB,OAAO,CAAC,CAAC,CAAC;QAC3B;QAEA,IAAI,CAACjC,OAAM,GAAI,KAAK;MACtB,EAAE,OAAOkC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;QACpB,IAAI,CAAClC,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAED,MAAMmC,UAAUA,CAAA,EAAG;MACjB;MACA,IAAI,CAAC,IAAI,CAAClC,OAAO,CAACC,IAAI,EAAE;QACtB,IAAI,CAACD,OAAO,CAACC,IAAG,GAAI,UAAU;MAChC;MACA,IAAI,CAAC,IAAI,CAACa,OAAO,CAACb,IAAI,EAAE;QACtB,IAAI,CAACa,OAAO,CAACb,IAAG,GAAI,UAAU;MAChC;MAEA,IAAI;QACF,MAAML,KAAK,CAACuC,IAAI,CAAC,iCAAiC,EAAE,IAAI,CAACnC,OAAO,CAAC;QACjE,MAAMJ,KAAK,CAACuC,IAAI,CAAC,iCAAiC,EAAE,IAAI,CAACrB,OAAO,CAAC;MACnE,EAAE,OAAOmB,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,MAAMG,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMxC,KAAK,CAACyC,MAAM,CAAC,+BAA+B,CAAC;MACrD,EAAE,OAAOJ,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EAEF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}