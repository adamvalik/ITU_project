{"ast":null,"code":"export default {\n  props: {\n    currentLevel: {\n      type: Number,\n      required: true\n    },\n    freePoints: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      hoverLevel: 0\n    };\n  },\n  methods: {\n    setSkillLevel(level) {\n      var setLevel = level;\n      // clear the level when setting the same level\n      if (setLevel === this.currentLevel) {\n        setLevel = 0;\n      }\n      // set the level to the maximum possible if wanted even more\n      if (setLevel > this.hoverLevel) {\n        setLevel = this.hoverLevel;\n      }\n      const pointsToAdd = setLevel - this.currentLevel;\n\n      // check if there are enough free points\n      if (this.freePoints - pointsToAdd >= 0) {\n        this.$emit('update-skill', setLevel);\n        this.$emit('update-free-points', this.freePoints - pointsToAdd);\n      }\n      // clear the hover level to see clicked level\n      this.hoverLevel = 0;\n    },\n    hoverSkillLevel(level) {\n      // show the level that would be set (based on the free skill point)\n      const maxLevel = this.currentLevel + this.freePoints;\n      this.hoverLevel = level > maxLevel ? maxLevel : level;\n    }\n  }\n};","map":{"version":3,"names":["props","currentLevel","type","Number","required","freePoints","data","hoverLevel","methods","setSkillLevel","level","setLevel","pointsToAdd","$emit","hoverSkillLevel","maxLevel"],"sources":["/home/antiphy/ITU/ITU_project/src/components/Selectors/SkillSelector.vue"],"sourcesContent":["<template>\n  <div class=\"flex\">\n    <div\n      v-for=\"n in 5\"\n      :key=\"n\"\n      @click=\"setSkillLevel(n)\"\n      @mouseenter=\"hoverSkillLevel(n)\"\n      @mouseleave=\"hoverSkillLevel(0)\"\n      class=\"w-12 h-12 rounded-2xl border-4 bg-gray-300 border-gray-400\"\n      :class=\"[\n        {'bg-yellow-300 border-yellow-400': n <= currentLevel,\n        'bg-yellow-100 border-yellow-200': n <= hoverLevel }]\"\n    ></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    currentLevel: {\n      type: Number,\n      required: true\n    },\n    freePoints: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      hoverLevel: 0\n    };\n  },\n  methods: {\n    setSkillLevel(level) {\n      var setLevel = level;\n      // clear the level when setting the same level\n      if (setLevel === this.currentLevel) {\n        setLevel = 0;\n      }\n      // set the level to the maximum possible if wanted even more\n      if (setLevel > this.hoverLevel) {\n        setLevel = this.hoverLevel;\n      }\n      const pointsToAdd = setLevel - this.currentLevel;\n\n      // check if there are enough free points\n      if (this.freePoints - pointsToAdd >= 0) {\n        this.$emit('update-skill', setLevel);\n        this.$emit('update-free-points', this.freePoints - pointsToAdd);\n      }\n      // clear the hover level to see clicked level\n      this.hoverLevel = 0;\n    },\n    hoverSkillLevel(level) {\n      // show the level that would be set (based on the free skill point)\n      const maxLevel = this.currentLevel + this.freePoints;\n      this.hoverLevel = (level > maxLevel) ? maxLevel : level;\n    }\n  }\n};\n</script>\n"],"mappings":"AAiBA,eAAe;EACbA,KAAK,EAAE;IACLC,YAAY,EAAE;MACZC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,UAAU,EAAE;MACVH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,KAAK,EAAE;MACnB,IAAIC,QAAO,GAAID,KAAK;MACpB;MACA,IAAIC,QAAO,KAAM,IAAI,CAACV,YAAY,EAAE;QAClCU,QAAO,GAAI,CAAC;MACd;MACA;MACA,IAAIA,QAAO,GAAI,IAAI,CAACJ,UAAU,EAAE;QAC9BI,QAAO,GAAI,IAAI,CAACJ,UAAU;MAC5B;MACA,MAAMK,WAAU,GAAID,QAAO,GAAI,IAAI,CAACV,YAAY;;MAEhD;MACA,IAAI,IAAI,CAACI,UAAS,GAAIO,WAAU,IAAK,CAAC,EAAE;QACtC,IAAI,CAACC,KAAK,CAAC,cAAc,EAAEF,QAAQ,CAAC;QACpC,IAAI,CAACE,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAACR,UAAS,GAAIO,WAAW,CAAC;MACjE;MACA;MACA,IAAI,CAACL,UAAS,GAAI,CAAC;IACrB,CAAC;IACDO,eAAeA,CAACJ,KAAK,EAAE;MACrB;MACA,MAAMK,QAAO,GAAI,IAAI,CAACd,YAAW,GAAI,IAAI,CAACI,UAAU;MACpD,IAAI,CAACE,UAAS,GAAKG,KAAI,GAAIK,QAAQ,GAAIA,QAAO,GAAIL,KAAK;IACzD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}