{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-col items-center bg-gray-100\"\n};\nconst _hoisted_2 = {\n  class: \"flex gap-4 items-center justify-between\"\n};\nconst _hoisted_3 = {\n  class: \"flex gap-4\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"relative w-14 h-14 rounded-3xl cursor-pointer hover:border-2 border-gray-100 transition-all\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.swapTank('left')),\n    class: \"h-10 w-10 bg-red-500 rounded-xl hover:border-2 border-gray-100 transition-all\"\n  }), _createElementVNode(\"div\", {\n    ref: \"svgContainer\",\n    class: _normalizeClass([\"tank-container w-64 h-64 mb-4 shadow-xl\", {\n      'flip-x': $props.isFlipped\n    }])\n  }, null, 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.swapTank('right')),\n    class: \"h-10 w-10 bg-red-500 rounded-xl hover:border-2 border-gray-100 transition-all\"\n  })]), _createCommentVNode(\" Color Change Buttons \"), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Color Buttons \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.colorOptions, (color, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      style: _normalizeStyle({\n        backgroundColor: color.hex\n      }),\n      onClick: $event => $options.changeColor(color.hex),\n      class: \"w-14 h-14 rounded-3xl hover:border-2 border-gray-100 transition-all\"\n    }, null, 12 /* STYLE, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Custom Color Input \"), _createElementVNode(\"label\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.customColor = $event),\n    type: \"color\",\n    class: \"absolute opacity-0\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.customColor]]), _createElementVNode(\"div\", {\n    class: \"absolute inset-0 rounded-3xl flex items-center justify-center text-l font-bold\",\n    style: _normalizeStyle($options.gradientStyle)\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"span\", {\n    class: \"text-white\"\n  }, \"+\", -1 /* HOISTED */)]), 4 /* STYLE */)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","$options","swapTank","ref","_normalizeClass","$props","isFlipped","_createCommentVNode","_hoisted_3","_Fragment","_renderList","$data","colorOptions","color","index","key","style","_normalizeStyle","backgroundColor","hex","changeColor","_hoisted_4","_hoisted_5","customColor","type","gradientStyle"],"sources":["/home/antiphy/ITU/ITU_project/src/components/TankSelector.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-center bg-gray-100\">\n    <div class=\"flex gap-4 items-center justify-between\">\n      <button @click=\"swapTank('left')\" class=\"h-10 w-10 bg-red-500 rounded-xl hover:border-2 border-gray-100 transition-all\"></button>\n\n      <div ref=\"svgContainer\" class=\"tank-container w-64 h-64 mb-4 shadow-xl\" :class=\"{ 'flip-x': isFlipped }\"></div>\n\n      <button @click=\"swapTank('right')\" class=\"h-10 w-10 bg-red-500 rounded-xl hover:border-2 border-gray-100 transition-all\"></button>\n    </div>\n    \n    <!-- Color Change Buttons -->\n    <div class=\"flex gap-4\">\n    <!-- Color Buttons -->\n    <button\n      v-for=\"(color, index) in colorOptions\"\n      :key=\"index\"\n      :style=\"{ backgroundColor: color.hex }\"\n      @click=\"changeColor(color.hex)\"\n      class=\"w-14 h-14 rounded-3xl hover:border-2 border-gray-100 transition-all\"\n    ></button>\n\n    <!-- Custom Color Input -->\n    <label class=\"relative w-14 h-14 rounded-3xl cursor-pointer hover:border-2 border-gray-100 transition-all\">\n      <input v-model=\"customColor\" type=\"color\" class=\"absolute opacity-0 \">\n      <div \n        class=\"absolute inset-0 rounded-3xl flex items-center justify-center text-l font-bold\"\n        :style=\"gradientStyle\"\n      >\n        <span class=\"text-white\">+</span>\n      </div>\n    </label>\n  </div>\n  </div>\n</template>\n  \n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    isFlipped: {\n      type: Boolean,\n      default: false,\n    }, \n    defaultColor: {\n      type: String,\n      default: '#123456',\n    },\n    defaultTankType: {\n      type: Number,\n      default: 0,\n    }\n  },\n  mounted() {\n    this.tankType = this.defaultTankType;\n    // if defaultColor is not one of the colorOptions, set customColor to defaultColor\n    if (!this.colorOptions.some((color) => color.hex === this.defaultColor)) {\n      this.customColor = this.defaultColor;\n    }\n    this.changeColor(this.defaultColor);\n    this.emitSelectedTank(); \n    this.emitSelectedColor();\n  },\n  data() {\n    return {\n      tankType: 0,\n      selectedColor: this.defaultColor, \n      colorOptions: [\n        { hex: \"#06B559\" },\n        { hex: \"#0D6BBD\" },\n        { hex: \"#BF1313\" },\n      ],\n      customColor: null,\n    };\n  },\n  watch: {\n    customColor(newColor) {\n      this.changeColor(newColor);\n    }\n  },\n  computed: {\n    gradientStyle() {\n      return this.customColor\n        ? { backgroundColor: this.customColor }\n        : { background: `linear-gradient(217deg, rgb(255,0,0), rgb(255,0,0,0) 70%),\n                        linear-gradient(127deg, rgb(0,255,0), rgb(0,255,0,0) 70%),\n                        linear-gradient(336deg, rgb(0,0,255), rgb(0,0,255,0) 70%)` }; \n    }\n  },\n  methods: {\n    swapTank(direction) {\n      if (direction === \"left\") {\n        this.tankType = (this.tankType + 4) % 5;\n      } else if (direction === \"right\") {\n        this.tankType = (this.tankType + 1) % 5;\n      }\n\n      this.emitSelectedTank();\n      this.loadTank();\n    },\n\n    changeColor(newColor) {\n      this.color = newColor;\n\n      this.emitSelectedColor();\n      this.loadTank();\n    },\n\n    async loadTank() {\n      console.log(\"loadTank: this.selectedColor\", this.selectedColor, \", this.tankType\", this.tankType);\n      try {\n        const response = await axios.get(`http://localhost:8000/selector/${this.tankType}`);\n        \n        this.$refs.svgContainer.innerHTML = response.data;\n\n        // wait until the next DOM update cycle\n        await this.$nextTick();\n\n        // apply color to tank\n        const elements = this.$refs.svgContainer.querySelectorAll(`[fill=\"#123456\"]`);\n        elements.forEach((element) => {\n          element.setAttribute(\"fill\", this.color); \n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    emitSelectedTank() {\n      this.$emit('tank-selected', this.tankType);\n    },\n    \n    emitSelectedColor() {\n      this.$emit('color-selected', this.color);\n    },\n  },\n};\n</script>\n  \n<style scoped>\n.tank-container {\n  background-color: white;\n  overflow: hidden;\n}\n\n.flip-x {\n  transform: scaleX(-1);\n}\n\ninput[type=\"color\"] {\n  -webkit-appearance: none;\n  appearance: none;\n  border: none;\n  cursor: pointer;\n}\n\ninput[type=\"color\"]::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n\ninput[type=\"color\"]::-webkit-color-swatch {\n  border: none;\n}\n</style>\n  "],"mappings":";;EACOA,KAAK,EAAC;AAAwC;;EAC5CA,KAAK,EAAC;AAAyC;;EAS/CA,KAAK,EAAC;AAAY;mBAX3B;;EAsBWA,KAAK,EAAC;AAA6F;;uBArB5GC,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BJC,mBAAA,CAMM,OANNC,UAMM,GALJD,mBAAA,CAAiI;IAAxHE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ;IAAUT,KAAK,EAAC;MAExCG,mBAAA,CAA+G;IAA1GO,GAAG,EAAC,cAAc;IAACV,KAAK,EALnCW,eAAA,EAKoC,yCAAyC;MAAA,UAAqBC,MAAA,CAAAC;IAAS;2BAErGV,mBAAA,CAAkI;IAAzHE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ;IAAWT,KAAK,EAAC;QAG3Cc,mBAAA,0BAA6B,EAC7BX,mBAAA,CAoBI,OApBJY,UAoBI,GAnBJD,mBAAA,mBAAsB,G,kBACtBb,mBAAA,CAMUe,SAAA,QAnBdC,WAAA,CAc+BC,KAAA,CAAAC,YAAY,EAd3C,CAccC,KAAK,EAAEC,KAAK;yBADtBpB,mBAAA,CAMU;MAJPqB,GAAG,EAAED,KAAK;MACVE,KAAK,EAhBZC,eAAA;QAAAC,eAAA,EAgBiCL,KAAK,CAACM;MAAG;MACnCrB,OAAK,EAAAE,MAAA,IAAEC,QAAA,CAAAmB,WAAW,CAACP,KAAK,CAACM,GAAG;MAC7B1B,KAAK,EAAC;oCAlBZ4B,UAAA;kCAqBId,mBAAA,wBAA2B,EAC3BX,mBAAA,CAQQ,SARR0B,UAQQ,G,gBAPN1B,mBAAA,CAAsE;IAvB5E,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAuBsBW,KAAA,CAAAY,WAAW,GAAAvB,MAAA;IAAEwB,IAAI,EAAC,OAAO;IAAC/B,KAAK,EAAC;iDAAhCkB,KAAA,CAAAY,WAAW,E,GAC3B3B,mBAAA,CAKM;IAJJH,KAAK,EAAC,gFAAgF;IACrFuB,KAAK,EA1BdC,eAAA,CA0BgBhB,QAAA,CAAAwB,aAAa;gCAErB7B,mBAAA,CAAiC;IAA3BH,KAAK,EAAC;EAAY,GAAC,GAAC,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}